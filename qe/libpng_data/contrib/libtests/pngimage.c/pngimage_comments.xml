<?xml version="1.0" ?>
<COMMENTS project_name="libpng" project_path="/home/dewang/smartKT/SmartKTRepo/projects/libpng">
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Define the following to use this test against your installed libpng, rather
 * than the one being built here:" comment_scope_start="27" comment_scope_end="36">
		<SYMBOLS>
			<inclusionDirective type="" spelling="../../png.h" id="2002069863893"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="because png.h did *not* include this" comment_scope_start="37" comment_scope_end="37">
		<SYMBOLS>
			<inclusionDirective type="" spelling="setjmp.h" id="2001584222246"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="include" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="1.6.1 added support for the configure test harness, which uses 77 to indicate
 * a skipped test, in earlier versions we need to succeed on a skipped test, so:" comment_scope_start="40" comment_scope_end="49">
		<SYMBOLS>
			<macroExpansion type="" spelling="PNG_LIBPNG_VER" id="2003558510542"/>
			<macroExpansion type="" spelling="PNG_LIBPNG_VER" id="2000409788111"/>
			<macroDefinition type="" spelling="SKIP" id="2000931599697"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="READ_PNG and WRITE_PNG were not defined, so:" comment_scope_start="50" comment_scope_end="53"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="SEQUENTIAL_READ" comment_scope_start="54" comment_scope_end="54"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="WRITE" comment_scope_start="57" comment_scope_end="57"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="INFO_IMAGE" comment_scope_start="58" comment_scope_end="58"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="pre 1.7.0" comment_scope_start="59" comment_scope_end="59"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="If a transform is valid on both read and write this implies that if the
 * transform is applied to read it must also be applied on write to produce
 * meaningful data.  This is because these transforms when performed on read
 * produce data with a memory format that does not correspond to a PNG format.
 *
 * Most of these transforms are invertible; after applying the transform on
 * write the result is the original PNG data that would have would have been
 * read if no transform were applied.
 *
 * The exception is _SHIFT, which destroys the low order bits marked as not
 * significant in a PNG with the sBIT chunk.
 *
 * The following table lists, for each transform, the conditions under which it
 * is expected to do anything.  Conditions are defined as follows:
 *
 * 1) Color mask bits required - simply a mask to AND with color_type; one of
 *    these must be present for the transform to fire, except that 0 means
 *    'always'.
 * 2) Color mask bits which must be absent - another mask - none of these must
 *    be present.
 * 3) Bit depths - a mask of component bit depths for the transform to fire.
 * 4) 'read' - the transform works in png_read_png.
 * 5) 'write' - the transform works in png_write_png.
 * 6) PNG_INFO_chunk; a mask of the chunks that must be present for the
 *    transform to fire.  All must be present - the requirement is that
 *    png_get_valid() &amp; mask == mask, so if mask is 0 there is no requirement.
 *
 * The condition refers to the original image state - if multiple transforms are
 * used together it is possible to cause a transform that wouldn't fire on the
 * original image to fire." comment_scope_start="62" comment_scope_end="119">
		<SYMBOLS>
			<StructDecl type="struct transform_info" spelling="transform_info" id="2002585270387"/>
			<FieldDecl type="const char *" spelling="name" id="2003424215107"/>
			<FieldDecl type="int" spelling="transform" id="2002990537259"/>
			<FieldDecl type="png_uint_32" spelling="valid_chunks" id="2000826455295"/>
			<FieldDecl type="png_byte" spelling="color_mask_required" id="2001753147635"/>
			<FieldDecl type="png_byte" spelling="color_mask_absent" id="2000669233264"/>
			<FieldDecl type="png_byte" spelling="bit_depths" id="2001781178708"/>
			<FieldDecl type="png_byte" spelling="when" id="2002743826723"/>
			<FieldDecl type="png_byte" spelling="tested" id="2003754554304"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2000596470660"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="invertible" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="absent = gray, no alpha" comment_scope_start="107" comment_scope_end="107"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="i.e. true-color depths" comment_scope_start="113" comment_scope_end="113"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="the transform was tested somewhere" comment_scope_start="118" comment_scope_end="118">
		<SYMBOLS>
			<FieldDecl type="png_byte" spelling="tested" id="2003754554304"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="List ALL the PNG_TRANSFORM_ macros here.  Check for support using the READ
    * macros; even if the transform is supported on write it cannot be tested
    * without the read support." comment_scope_start="121" comment_scope_end="128"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="!tested" comment_scope_start="128" comment_scope_end="128"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="drops the bottom 8 bits when bit depth is 16" comment_scope_start="132" comment_scope_end="135">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;STRIP_ALPHA&quot;" id="2002245856938"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="removes the alpha channel if present" comment_scope_start="136" comment_scope_end="144">
		<SYMBOLS>
			<StringLiteral type="char [8]" spelling="&quot;PACKING&quot;" id="2003877271615"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="removes" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="unpacks low-bit-depth components into 1 byte per component on read,
       * reverses this on write." comment_scope_start="145" comment_scope_end="155">
		<SYMBOLS>
			<StringLiteral type="char [9]" spelling="&quot;PACKSWAP&quot;" id="2002768778447"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="reverses the order of low-bit-depth components packed into a byte" comment_scope_start="156" comment_scope_end="159">
		<SYMBOLS>
			<StringLiteral type="char [7]" spelling="&quot;EXPAND&quot;" id="2002348025486"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands PLTE PNG files to RGB (no tRNS) or RGBA (tRNS) *
       * Note that the 'EXPAND' transform does lots of different things:" comment_scope_start="160" comment_scope_end="162">
		<SYMBOLS>
			<StringLiteral type="char [7]" spelling="&quot;EXPAND&quot;" id="2000501017747"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="rgba"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands grayscale PNG files to RGB, or RGBA" comment_scope_start="163" comment_scope_end="164">
		<SYMBOLS>
			<StringLiteral type="char [7]" spelling="&quot;EXPAND&quot;" id="2003183907653"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="rgba"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands the tRNS chunk in files without alpha" comment_scope_start="165" comment_scope_end="173">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;INVERT_MONO&quot;" id="2003265466921"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="converts gray-scale components to 1..0 from 0..1" comment_scope_start="174" comment_scope_end="182">
		<SYMBOLS>
			<StringLiteral type="char [6]" spelling="&quot;SHIFT&quot;" id="2003504763516"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="converts" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="reduces component values to the original range based on the sBIT chunk,
       * this is only partially reversible - the low bits are lost and cannot be
       * recovered on write.  In fact write code replicates the bits to generate
       * new low-order bits." comment_scope_start="183" comment_scope_end="195">
		<SYMBOLS>
			<StringLiteral type="char [4]" spelling="&quot;BGR&quot;" id="2001014514779"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reduces" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="reverses the rgb component values of true-color pixels" comment_scope_start="196" comment_scope_end="204">
		<SYMBOLS>
			<StringLiteral type="char [11]" spelling="&quot;SWAP_ALPHA&quot;" id="2004030286134"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="swaps the alpha channel of RGBA or GA pixels to the front - ARGB or
       * AG, on write reverses the process." comment_scope_start="205" comment_scope_end="215">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;SWAP_ENDIAN&quot;" id="2002730725833"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="front" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="rgba"/>
			<PROBLEM_DOMAIN word="ga"/>
			<PROBLEM_DOMAIN word="argb"/>
			<PROBLEM_DOMAIN word="ag"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="byte-swaps 16-bit component values" comment_scope_start="216" comment_scope_end="224">
		<SYMBOLS>
			<StringLiteral type="char [13]" spelling="&quot;INVERT_ALPHA&quot;" id="2002127063687"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="converts an alpha channel from 0..1 to 1..0" comment_scope_start="225" comment_scope_end="227"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="'A' for a filler!" comment_scope_start="228" comment_scope_end="228">
		<SYMBOLS>
			<StringLiteral type="char [20]" spelling="&quot;STRIP_FILLER_BEFORE&quot;" id="2000738098932"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="on write skips a leading filler channel; testing requires data with a
       * filler channel so this is produced from RGBA or GA images by removing
       * the 'alpha' flag from the color type in place." comment_scope_start="229" comment_scope_end="233">
		<SYMBOLS>
			<StringLiteral type="char [19]" spelling="&quot;STRIP_FILLER_AFTER&quot;" id="2001896556892"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="removing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="rgba"/>
			<PROBLEM_DOMAIN word="ga"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="on write strips a trailing filler channel" comment_scope_start="234" comment_scope_end="237">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;GRAY_TO_RGB&quot;" id="2000715913128"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands grayscale images to RGB, also causes the palette part of
       * 'EXPAND' to happen.  Low bit depth grayscale images are expanded to
       * 8-bits per component and no attempt is made to convert the image to a
       * palette image.  While this transform is partially reversible
       * png_write_png does not currently support this." comment_scope_start="238" comment_scope_end="244">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;GRAY_TO_RGB&quot;" id="2000918096184"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="The 'palette' side effect mentioned above; a bit bogus but this is the
       * way the libpng code works." comment_scope_start="245" comment_scope_end="250">
		<SYMBOLS>
			<StringLiteral type="char [10]" spelling="&quot;EXPAND_16&quot;" id="2000761102651"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands images to 16-bits per component, as a side effect expands
       * palette images to RGB and expands the tRNS chunk if present, so it can
       * modify 16-bit per component images as well:" comment_scope_start="251" comment_scope_end="255">
		<SYMBOLS>
			<StringLiteral type="char [10]" spelling="&quot;EXPAND_16&quot;" id="2000851928254"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="modify" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="side effect of EXPAND_16 - expands the tRNS chunk in an RGB or G 16-bit
       * image." comment_scope_start="256" comment_scope_end="261">
		<SYMBOLS>
			<StringLiteral type="char [9]" spelling="&quot;SCALE_16&quot;" id="2001068427801"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="scales 16-bit components to 8-bits." comment_scope_start="262" comment_scope_end="268">
		<SYMBOLS>
			<VarDecl type="struct transform_info [21]" spelling="transform_info" id="2000646308321"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="name" comment_scope_start="265" comment_scope_end="265"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="!tested" comment_scope_start="265" comment_scope_end="265"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Some combinations of options that should be reversible are not; these cases
 * are bugs." comment_scope_start="273" comment_scope_end="280">
		<SYMBOLS>
			<VarDecl type="int [1][2]" spelling="known_bad_combos" id="2001777416065"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bugs" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="problem, antidote" comment_scope_start="278" comment_scope_end="278"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="antidote" comment_scope_start="279" comment_scope_end="279"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="non-zero if more than one set bit" comment_scope_start="285" comment_scope_end="285">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="transforms" id="2004011805705"/>
			<UnexposedExpr type="int" spelling="transforms" id="2001901726433"/>
			<DeclRefExpr type="int" spelling="transforms" id="2002382231682"/>
			<DeclRefExpr type="int" spelling="transforms" id="2002003908609"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="lowest set bit" comment_scope_start="291" comment_scope_end="291">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="transforms" id="2001582789292"/>
			<UnexposedExpr type="int" spelling="transforms" id="2002729510597"/>
			<DeclRefExpr type="int" spelling="transforms" id="2001292393184"/>
			<DeclRefExpr type="int" spelling="transforms" id="2002138068713"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="combo is ok" comment_scope_start="308" comment_scope_end="308"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="The name, if 't' has multiple bits set the name of the lowest set bit is
    * returned." comment_scope_start="313" comment_scope_end="327">
		<SYMBOLS>
			<MemberRefExpr type="const char *" spelling="name" id="2001702568214"/>
			<MemberRefExpr type="int" spelling="transform" id="2000837323914"/>
			<MemberRefExpr type="const char *" spelling="name" id="2003609650170"/>
			<UnexposedExpr type="int" spelling="t" id="2002415419849"/>
			<UnexposedExpr type="unsigned long" spelling="i" id="2000511567661"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002324073231"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000971638244"/>
			<UnexposedExpr type="const char *" spelling="name" id="2001565740058"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001147922405"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001445850583"/>
			<UnexposedExpr type="int" spelling="transform" id="2002144657496"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003273826693"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002257409867"/>
			<UnexposedExpr type="int" spelling="t" id="2000852378959"/>
			<UnexposedExpr type="const char *" spelling="name" id="2004004280812"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2004235572568"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002164965549"/>
			<StringLiteral type="char [18]" spelling="&quot;invalid transform&quot;" id="2003583525965"/>
			<DeclRefExpr type="int" spelling="t" id="2003454345279"/>
			<DeclRefExpr type="int" spelling="t" id="2003424312949"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002633420213"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002505032642"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000514249605"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000077944449"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003980976416"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000892211500"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001815015628"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003197660722"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001229057471"/>
			<DeclRefExpr type="int" spelling="t" id="2003875796373"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000295451394"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003611834698"/>
			<VarDecl type="unsigned int" spelling="i" id="2004142623748"/>
			<FunctionDecl type="const char *(int)" spelling="transform_name" id="2000683476486"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="first set bit" comment_scope_start="319" comment_scope_end="319">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="t" id="2002415419849"/>
			<DeclRefExpr type="int" spelling="t" id="2003454345279"/>
			<DeclRefExpr type="int" spelling="t" id="2003424312949"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Variables calculated by validate_T below and used to record all the supported
 * transforms.  Need (unsigned int) here because of the places where these
 * values are used (unsigned compares in the 'exhaustive' iterator.)" comment_scope_start="329" comment_scope_end="336">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="read_transforms" id="2001647035129"/>
			<VarDecl type="unsigned int" spelling="write_transforms" id="2002437334408"/>
			<VarDecl type="unsigned int" spelling="rw_transforms" id="2003464533019"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="iterator" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Validate the above table - this just builds the above values" comment_scope_start="337" comment_scope_end="357">
		<SYMBOLS>
			<MemberRefExpr type="const char *" spelling="name" id="2003601200335"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2003683980646"/>
			<MemberRefExpr type="int" spelling="transform" id="2002197403758"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2000815880687"/>
			<MemberRefExpr type="int" spelling="transform" id="2003221674055"/>
			<UnexposedExpr type="unsigned long" spelling="i" id="2000405601132"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003290952439"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003008751064"/>
			<UnexposedExpr type="const char *" spelling="name" id="2000645572380"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000657922936"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001859484646"/>
			<UnexposedExpr type="int" spelling="when" id="2002965900830"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2000233363458"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000775869143"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003828090435"/>
			<UnexposedExpr type="unsigned int" spelling="transform" id="2000554458962"/>
			<UnexposedExpr type="int" spelling="transform" id="2002676128190"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001157639678"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002602608272"/>
			<UnexposedExpr type="int" spelling="when" id="2000638907662"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2001606624629"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2004188052808"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002810459923"/>
			<UnexposedExpr type="unsigned int" spelling="transform" id="2001943007751"/>
			<UnexposedExpr type="int" spelling="transform" id="2001872007618"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000545658937"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002537634325"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2002590014329"/>
			<UnexposedExpr type="unsigned int" spelling="write_transforms" id="2000950282626"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2004233514424"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003614942342"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000673929402"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001923847406"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000757578201"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002089956697"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002215048699"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002643425575"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003962786875"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2000469541170"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001722174017"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000229525120"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002425046763"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002478084887"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2003316973839"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002521885982"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000930913929"/>
			<DeclRefExpr type="unsigned int" spelling="rw_transforms" id="2000521954049"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2000131687398"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2001576498695"/>
			<VarDecl type="unsigned int" spelling="i" id="2000786756126"/>
			<FunctionDecl type="void (void)" spelling="validate_T" id="2003429024255"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Reversible transforms are those which are supported on both read and
    * write." comment_scope_start="353" comment_scope_end="357">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2002590014329"/>
			<UnexposedExpr type="unsigned int" spelling="write_transforms" id="2000950282626"/>
			<DeclRefExpr type="unsigned int" spelling="rw_transforms" id="2000521954049"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2000131687398"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2001576498695"/>
			<FunctionDecl type="void (void)" spelling="validate_T" id="2003429024255"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="FILE DATA HANDLING
 *    The original file is cached in memory.  During write the output file is
 *    written to memory.
 *
 *    In both cases the file data is held in a linked list of buffers - not all
 *    of these are in use at any time." comment_scope_start="359" comment_scope_end="370"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="next buffer in list" comment_scope_start="371" comment_scope_end="371">
		<SYMBOLS>
			<FieldDecl type="struct buffer_list *" spelling="next" id="2001949776821"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2001071003950"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="the actual buffer" comment_scope_start="372" comment_scope_end="372">
		<SYMBOLS>
			<FieldDecl type="png_byte [1024]" spelling="buffer" id="2000287525778"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="last buffer in use" comment_scope_start="377" comment_scope_end="377">
		<SYMBOLS>
			<FieldDecl type="struct buffer_list *" spelling="last" id="2000803391225"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2001071003950"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="bytes in the last buffer" comment_scope_start="378" comment_scope_end="378">
		<SYMBOLS>
			<FieldDecl type="size_t" spelling="end_count" id="2000684748929"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="current buffer being read" comment_scope_start="379" comment_scope_end="379">
		<SYMBOLS>
			<FieldDecl type="struct buffer_list *" spelling="current" id="2001268050182"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2001071003950"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="count of bytes read from current" comment_scope_start="380" comment_scope_end="380">
		<SYMBOLS>
			<FieldDecl type="size_t" spelling="read_count" id="2002118455063"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="the very first buffer" comment_scope_start="381" comment_scope_end="381">
		<SYMBOLS>
			<FieldDecl type="struct buffer_list" spelling="first" id="2003915017802"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2001071003950"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Call this only once for a given buffer" comment_scope_start="386" comment_scope_end="391">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2002201099535"/>
			<MemberRefExpr type="struct buffer_list" spelling="first" id="2000612499560"/>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2003766009388"/>
			<MemberRefExpr type="struct buffer_list *" spelling="current" id="2002211409596"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2000805015562"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2002144168083"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2004247990752"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2002187306956"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2003046688849"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2001861533238"/>
			<FunctionDecl type="void (struct buffer *)" spelling="buffer_init" id="2003605388931"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="required by POSIX 1003.1" comment_scope_start="429" comment_scope_end="429"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="required by ANSI-C" comment_scope_start="432" comment_scope_end="432"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Used from libpng callbacks to get the current buffer" comment_scope_start="436" comment_scope_end="439">
		<SYMBOLS>
			<UnexposedExpr type="png_voidp (*)(png_const_structrp)" spelling="png_get_io_ptr" id="2002873460428"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2003083336224"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2002981704145"/>
			<DeclRefExpr type="png_voidp (png_const_structrp)" spelling="png_get_io_ptr" id="2002535671181"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2001332414660"/>
			<FunctionDecl type="struct buffer *(png_structp)" spelling="get_buffer" id="2000745891295"/>
			<CallExpr type="png_voidp" spelling="png_get_io_ptr" id="2001613283444"/>
			<TypeRef type="struct buffer" spelling="struct buffer" id="2002735828553"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Load a buffer from a file; does the equivalent of buffer_start_write.  On a
 * read error returns an errno value, else returns 0." comment_scope_start="458" comment_scope_end="468">
		<SYMBOLS>
			<ParmDecl type="struct buffer *" spelling="buffer" id="2001456715855"/>
			<ParmDecl type="FILE *" spelling="fp" id="2001232048826"/>
			<MemberRefExpr type="struct buffer_list" spelling="first" id="2002700694269"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2003866481000"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2004233936613"/>
			<VarDecl type="struct buffer_list *" spelling="last" id="2001586708566"/>
			<VarDecl type="size_t" spelling="count" id="2002555977347"/>
			<TypeRef type="struct buffer" spelling="struct buffer" id="2002735828553"/>
			<TypeRef type="FILE" spelling="FILE" id="2002359927549"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2001071003950"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="load" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="size" comment_scope_start="469" comment_scope_end="469">
		<SYMBOLS>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2002221304858"/>
			<UnexposedExpr type="unsigned long (*)(void *, unsigned long, unsigned long, FILE *)" spelling="fread" id="2002397548668"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2002204217984"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2003712902161"/>
			<UnexposedExpr type="size_t" spelling="count" id="2004097492300"/>
			<DeclRefExpr type="unsigned long (void *, unsigned long, unsigned long, FILE *)" spelling="fread" id="2003077603580"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000415207225"/>
			<DeclRefExpr type="size_t" spelling="count" id="2000293068599"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="fread failed - probably end of file" comment_scope_start="493" comment_scope_end="493"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="no error" comment_scope_start="499" comment_scope_end="499"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Some kind of funky error; errno should be non-zero" comment_scope_start="502" comment_scope_end="504">
		<SYMBOLS>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2000734345401"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2002485673966"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2001405895080"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2001420217118"/>
			<CallExpr type="int *" spelling="__errno_location" id="2003781021097"/>
			<CallExpr type="int *" spelling="__errno_location" id="2003536403739"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="This structure is used to control the test of a single file." comment_scope_start="508" comment_scope_end="524">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="VERBOSE" id="2001062577341"/>
			<EnumConstantDecl type="int" spelling="INFORMATION" id="2000218507535"/>
			<EnumConstantDecl type="int" spelling="WARNINGS" id="2000511931299"/>
			<EnumConstantDecl type="int" spelling="LIBPNG_WARNING" id="2003535365711"/>
			<EnumConstantDecl type="int" spelling="APP_WARNING" id="2004090483135"/>
			<EnumConstantDecl type="int" spelling="ERRORS" id="2001611761522"/>
			<EnumConstantDecl type="int" spelling="APP_FAIL" id="2001397623071"/>
			<EnumConstantDecl type="int" spelling="LIBPNG_ERROR" id="2003687916813"/>
			<EnumConstantDecl type="int" spelling="LIBPNG_BUG" id="2002830362686"/>
			<EnumConstantDecl type="int" spelling="APP_ERROR" id="2003365039119"/>
			<EnumConstantDecl type="int" spelling="QUIET" id="2000400952425"/>
			<EnumConstantDecl type="int" spelling="USER_ERROR" id="2001858727704"/>
			<EnumConstantDecl type="int" spelling="INTERNAL_ERROR" id="2001295464197"/>
			<TypedefDecl type="error_level" spelling="error_level" id="2002373488317"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="switches on all messages" comment_scope_start="511" comment_scope_end="511">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="VERBOSE" id="2001062577341"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="switches on warnings" comment_scope_start="513" comment_scope_end="513">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="WARNINGS" id="2000511931299"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="just errors" comment_scope_start="516" comment_scope_end="516">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="ERRORS" id="2001611761522"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="continuable error - no need to longjmp" comment_scope_start="517" comment_scope_end="517">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="APP_FAIL" id="2001397623071"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="this and higher cause a longjmp" comment_scope_start="518" comment_scope_end="518">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="LIBPNG_ERROR" id="2003687916813"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="erroneous behavior in libpng" comment_scope_start="519" comment_scope_end="519">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="LIBPNG_BUG" id="2002830362686"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="such as out-of-memory in a callback" comment_scope_start="520" comment_scope_end="520">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="APP_ERROR" id="2003365039119"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="no normal messages" comment_scope_start="521" comment_scope_end="521">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="QUIET" id="2000400952425"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="such as file-not-found" comment_scope_start="522" comment_scope_end="522">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="USER_ERROR" id="2001858727704"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="where the level is in 'options'" comment_scope_start="525" comment_scope_end="525"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Test all combinations of active options" comment_scope_start="527" comment_scope_end="527"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Fail on warnings as well as errors" comment_scope_start="528" comment_scope_end="528"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Log pass/fail to stdout" comment_scope_start="529" comment_scope_end="529"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Continue on APP_FAIL errors" comment_scope_start="530" comment_scope_end="530"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Skip over known bugs" comment_scope_start="531" comment_scope_end="531"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Log skipped bugs" comment_scope_start="532" comment_scope_end="532"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Attempt to deduce bad combos" comment_scope_start="533" comment_scope_end="533"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="List combos by name" comment_scope_start="534" comment_scope_end="534"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Result masks apply to the result bits in the 'results' field below; these
 * bits are simple 1U&lt;&lt;error_level.  A pass requires either nothing worse than
 * warnings (--relaxes) or nothing worse than information (--strict)" comment_scope_start="536" comment_scope_end="544"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Where to go to on error" comment_scope_start="545" comment_scope_end="545">
		<SYMBOLS>
			<FieldDecl type="jmp_buf" spelling="error_return" id="2002105352950"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2002778678078"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="The name of the original file" comment_scope_start="547" comment_scope_end="547">
		<SYMBOLS>
			<FieldDecl type="const char *" spelling="filename" id="2000972592139"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Operation being performed" comment_scope_start="548" comment_scope_end="548">
		<SYMBOLS>
			<FieldDecl type="const char *" spelling="operation" id="2000314238555"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Transform used in operation" comment_scope_start="549" comment_scope_end="549">
		<SYMBOLS>
			<FieldDecl type="int" spelling="transforms" id="2001743514580"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="See display_log below" comment_scope_start="550" comment_scope_end="550">
		<SYMBOLS>
			<FieldDecl type="png_uint_32" spelling="options" id="2001235966906"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2000596470660"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="A mask of errors seen" comment_scope_start="551" comment_scope_end="551">
		<SYMBOLS>
			<FieldDecl type="png_uint_32" spelling="results" id="2000137685682"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2000596470660"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="used on the original read" comment_scope_start="554" comment_scope_end="554">
		<SYMBOLS>
			<FieldDecl type="png_structp" spelling="original_pp" id="2001103378840"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2003724623903"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="set by the original read" comment_scope_start="555" comment_scope_end="555">
		<SYMBOLS>
			<FieldDecl type="png_infop" spelling="original_ip" id="2003641513984"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2002775950877"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="of the original rows:" comment_scope_start="557" comment_scope_end="557">
		<SYMBOLS>
			<FieldDecl type="size_t" spelling="original_rowbytes" id="2001142143223"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="from the original read" comment_scope_start="558" comment_scope_end="558">
		<SYMBOLS>
			<FieldDecl type="png_bytepp" spelling="original_rows" id="2003285954993"/>
			<TypeRef type="png_bytepp" spelling="png_bytepp" id="2000038617223"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Original chunks valid" comment_scope_start="560" comment_scope_end="562">
		<SYMBOLS>
			<FieldDecl type="png_uint_32" spelling="chunks" id="2003048659566"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2000596470660"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Original IHDR information" comment_scope_start="563" comment_scope_end="571">
		<SYMBOLS>
			<FieldDecl type="png_uint_32" spelling="width" id="2002926383772"/>
			<FieldDecl type="png_uint_32" spelling="height" id="2000193220842"/>
			<FieldDecl type="int" spelling="bit_depth" id="2002017029591"/>
			<FieldDecl type="int" spelling="color_type" id="2003644379236"/>
			<FieldDecl type="int" spelling="interlace_method" id="2001338543143"/>
			<FieldDecl type="int" spelling="compression_method" id="2003903175032"/>
			<FieldDecl type="int" spelling="filter_method" id="2001596492918"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2000596470660"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2000596470660"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Derived information for the original image." comment_scope_start="572" comment_scope_end="572"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms that do something on read" comment_scope_start="573" comment_scope_end="573">
		<SYMBOLS>
			<FieldDecl type="int" spelling="active_transforms" id="2001611629855"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms that should do nothing" comment_scope_start="574" comment_scope_end="574">
		<SYMBOLS>
			<FieldDecl type="int" spelling="ignored_transforms" id="2002363160028"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Used on a read, both the original read and when validating a written
    * image." comment_scope_start="576" comment_scope_end="582">
		<SYMBOLS>
			<FieldDecl type="png_structp" spelling="read_pp" id="2001482272262"/>
			<FieldDecl type="png_infop" spelling="read_ip" id="2000286140677"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2003724623903"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2002775950877"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="validating" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Used to write a new image (the original info_ptr is used)" comment_scope_start="583" comment_scope_end="584">
		<SYMBOLS>
			<FieldDecl type="png_structp" spelling="write_pp" id="2000447562694"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2003724623903"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="where the file gets written" comment_scope_start="585" comment_scope_end="585">
		<SYMBOLS>
			<FieldDecl type="struct buffer" spelling="written_file" id="2000767358948"/>
			<TypeRef type="struct buffer" spelling="struct buffer" id="2002735828553"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Data read from the original file" comment_scope_start="588" comment_scope_end="588">
		<SYMBOLS>
			<FieldDecl type="struct buffer" spelling="original_file" id="2003138571119"/>
			<TypeRef type="struct buffer" spelling="struct buffer" id="2002735828553"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Call this only once right at the start to initialize the control
    * structure, the (struct buffer) lists are maintained across calls - the
    * memory is not freed." comment_scope_start="593" comment_scope_end="613">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000488563395"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2001046006011"/>
			<MemberRefExpr type="const char *" spelling="operation" id="2003728224010"/>
			<MemberRefExpr type="png_structp" spelling="original_pp" id="2000231205163"/>
			<MemberRefExpr type="png_infop" spelling="original_ip" id="2002139792161"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2002868039334"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2000649044121"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2001981405334"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2003303103333"/>
			<MemberRefExpr type="png_structp" spelling="write_pp" id="2001296330436"/>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2003987316397"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2000164282445"/>
			<UnexposedExpr type="void *" spelling="dp" id="2000871022730"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004048225028"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000837254397"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003178626932"/>
			<UnexposedExpr type="png_uint_32" spelling="WARNINGS" id="2002670740202"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003023196496"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000781655935"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003985670524"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000120729301"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002593274640"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000797685634"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002812311087"/>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_init" id="2000155925768"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001527532049"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001427008537"/>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_init" id="2003809622191"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000381113044"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2002526544752"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000568695811"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002663972614"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001240425456"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2001310907231"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000476605101"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002278596059"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001994781448"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001825220476"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001732206987"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000107089842"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000563491361"/>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_init" id="2001744914535"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003033057829"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000191314430"/>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_init" id="2001006871417"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000607119798"/>
			<FunctionDecl type="void (struct display *)" spelling="display_init" id="2000275494497"/>
			<CallExpr type="void *" spelling="memset" id="2002522683371"/>
			<CallExpr type="void" spelling="buffer_init" id="2003056991529"/>
			<CallExpr type="void" spelling="buffer_init" id="2002233204508"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="right" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="struct" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="freed" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="default to !verbose, !quiet" comment_scope_start="599" comment_scope_end="599">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000488563395"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003178626932"/>
			<UnexposedExpr type="png_uint_32" spelling="WARNINGS" id="2002670740202"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001240425456"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2001310907231"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="leave the filename for error detection" comment_scope_start="644" comment_scope_end="644"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="reset for next time" comment_scope_start="645" comment_scope_end="645">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="results" id="2002853237912"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000803251290"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002188369091"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Release any memory held in the display." comment_scope_start="651" comment_scope_end="657">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2003641827123"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2000804856397"/>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_destroy" id="2001242506968"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002053170038"/>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_destroy" id="2003490536658"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002679386519"/>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_destroy" id="2000730995764"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001375469922"/>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_destroy" id="2000983903273"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002883482726"/>
			<FunctionDecl type="void (struct display *)" spelling="display_destroy" id="2002859880217"/>
			<CallExpr type="void" spelling="buffer_destroy" id="2002422837361"/>
			<CallExpr type="void" spelling="buffer_destroy" id="2001802112075"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="The display pointer is always stored in the png_struct error pointer" comment_scope_start="661" comment_scope_end="672">
		<SYMBOLS>
			<UnexposedExpr type="png_voidp (*)(png_const_structrp)" spelling="png_get_error_ptr" id="2002483655728"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2001190937502"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2003409615179"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000055064827"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2003648394013"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2001537929904"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2004030730007"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000607343406"/>
			<StringLiteral type="char [39]" spelling="&quot;pngimage: internal error (no display)\n&quot;" id="2003348795148"/>
			<DeclRefExpr type="png_voidp (png_const_structrp)" spelling="png_get_error_ptr" id="2002893624046"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2003995970040"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000591212551"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2003321076104"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2003104277788"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2000666867407"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004210420450"/>
			<VarDecl type="struct display *" spelling="dp" id="2000543793311"/>
			<FunctionDecl type="struct display *(png_structp)" spelling="get_dp" id="2001635959702"/>
			<CallExpr type="png_voidp" spelling="png_get_error_ptr" id="2003993976375"/>
			<CallExpr type="int" spelling="fprintf" id="2002897630285"/>
			<CallExpr type="void" spelling="exit" id="2001466622051"/>
			<TypeRef type="struct display" spelling="struct display" id="2001291171455"/>
			<TypeRef type="struct display" spelling="struct display" id="2001291171455"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="prevents a crash" comment_scope_start="668" comment_scope_end="668">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2004030730007"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2000666867407"/>
			<CallExpr type="void" spelling="exit" id="2001466622051"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="error handling" comment_scope_start="674" comment_scope_end="676"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Required to quiet GNUC warnings when the compiler sees a stdarg function
    * that calls one of the stdio v APIs." comment_scope_start="677" comment_scope_end="684">
		<SYMBOLS>
			<ParmDecl type="struct display *" spelling="dp" id="2000703759014"/>
			<ParmDecl type="error_level" spelling="level" id="2003204102447"/>
			<ParmDecl type="const char *" spelling="fmt" id="2004294769832"/>
			<TypeRef type="struct display" spelling="struct display" id="2001291171455"/>
			<TypeRef type="error_level" spelling="error_level" id="2002023649129"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="'level' is as above, fmt is a stdio style format string.  This routine
    * does not return if level is above LIBPNG_WARNING" comment_scope_start="685" comment_scope_end="767">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="results" id="2001961222888"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002370803372"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2003039203197"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2001652533360"/>
			<MemberRefExpr type="const char *" spelling="operation" id="2004163616014"/>
			<MemberRefExpr type="int" spelling="transforms" id="2003971987071"/>
			<MemberRefExpr type="int" spelling="transforms" id="2004086213008"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001982510138"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000394744888"/>
			<MemberRefExpr type="jmp_buf" spelling="error_return" id="2000870181826"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003400504882"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2002901437327"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002448263238"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2002394695302"/>
			<UnexposedExpr type="error_level" spelling="level" id="2001325919517"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2003127929062"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000093458761"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2000163623997"/>
			<UnexposedExpr type="error_level" spelling="level" id="2000901216068"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2004078570065"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2004032080764"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2000491337695"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003962794153"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2003101746618"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000734061749"/>
			<UnexposedExpr type="const char *" spelling="lp" id="2001911687748"/>
			<UnexposedExpr type="const char *" spelling="operation" id="2001366594224"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004018731707"/>
			<UnexposedExpr type="int" spelling="transforms" id="2001379347795"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002614087172"/>
			<UnexposedExpr type="int" spelling="transforms" id="2000348863729"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001789724954"/>
			<UnexposedExpr type="int (*)(int)" spelling="is_combo" id="2003441517543"/>
			<UnexposedExpr type="int" spelling="tr" id="2000250943945"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2003887849878"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001983349971"/>
			<UnexposedExpr type="int" spelling="tr" id="2001811266732"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2003118164535"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2004102707803"/>
			<UnexposedExpr type="int" spelling="trx" id="2003871674654"/>
			<UnexposedExpr type="int" spelling="trx" id="2002440597830"/>
			<UnexposedExpr type="int" spelling="trx" id="2003587678077"/>
			<UnexposedExpr type="int" spelling="trx" id="2001651492030"/>
			<UnexposedExpr type="int" spelling="start" id="2000735975968"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2002972359995"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2002796516549"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2003746305141"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2004226649110"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="transform_name" id="2001382234021"/>
			<UnexposedExpr type="int" spelling="trz" id="2001823147252"/>
			<UnexposedExpr type="int" spelling="trz" id="2003802949305"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2000230817324"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2000291377138"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2001520623095"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2001461889827"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2003450503270"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2003532792324"/>
			<UnexposedExpr type="int" spelling="tr" id="2002555169491"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2003968933617"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2001208650275"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="transform_name" id="2000018714280"/>
			<UnexposedExpr type="int" spelling="tr" id="2000303138056"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2002117745786"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2003686583197"/>
			<UnexposedExpr type="void (*)(struct __va_list_tag *, ...)" spelling="__builtin_va_start" id="2003064792880"/>
			<UnexposedExpr type="struct __va_list_tag *" spelling="ap" id="2004057390726"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, struct __va_list_tag *)" spelling="vfprintf" id="2000610149262"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2001621271851"/>
			<UnexposedExpr type="const char *" spelling="fmt" id="2000245839198"/>
			<UnexposedExpr type="struct __va_list_tag *" spelling="ap" id="2002688950770"/>
			<UnexposedExpr type="void (*)(struct __va_list_tag *)" spelling="__builtin_va_end" id="2003253653386"/>
			<UnexposedExpr type="struct __va_list_tag *" spelling="ap" id="2002244695896"/>
			<UnexposedExpr type="int (*)(int, FILE *)" spelling="fputc" id="2002180051302"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2004141648020"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2002436978036"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002038377929"/>
			<UnexposedExpr type="unsigned int" spelling="APP_FAIL" id="2001783876087"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2001246338087"/>
			<UnexposedExpr type="error_level" spelling="level" id="2004014008853"/>
			<UnexposedExpr type="unsigned int" spelling="ERRORS" id="2003803488004"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001380860968"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002530990396"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2001071090820"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="error_return" id="2002990760487"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000154394149"/>
			<UnexposedExpr type="int" spelling="level" id="2002744060680"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002329370205"/>
			<StringLiteral type="char [12]" spelling="&quot;information&quot;" id="2000340219256"/>
			<StringLiteral type="char [16]" spelling="&quot;warning(libpng)&quot;" id="2003077768423"/>
			<StringLiteral type="char [18]" spelling="&quot;warning(pngimage)&quot;" id="2000105974447"/>
			<StringLiteral type="char [19]" spelling="&quot;error(continuable)&quot;" id="2001645374324"/>
			<StringLiteral type="char [14]" spelling="&quot;error(libpng)&quot;" id="2003222745117"/>
			<StringLiteral type="char [12]" spelling="&quot;bug(libpng)&quot;" id="2004225509107"/>
			<StringLiteral type="char [16]" spelling="&quot;error(pngimage)&quot;" id="2001262176716"/>
			<StringLiteral type="char [12]" spelling="&quot;error(user)&quot;" id="2002972321845"/>
			<StringLiteral type="char [14]" spelling="&quot;bug(pngimage)&quot;" id="2002983473931"/>
			<StringLiteral type="char [11]" spelling="&quot;%s: %s: %s&quot;" id="2003309545807"/>
			<StringLiteral type="char [8]" spelling="&quot;&lt;stdin&gt;&quot;" id="2000360427867"/>
			<StringLiteral type="char [2]" spelling="&quot;(&quot;" id="2001896988961"/>
			<StringLiteral type="char [2]" spelling="&quot;+&quot;" id="2002091153565"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2004064963898"/>
			<StringLiteral type="char [2]" spelling="&quot;-&quot;" id="2002986857927"/>
			<StringLiteral type="char [2]" spelling="&quot;)&quot;" id="2001271541777"/>
			<StringLiteral type="char [7]" spelling="&quot;(0x%x)&quot;" id="2000213671014"/>
			<StringLiteral type="char [5]" spelling="&quot;(%s)&quot;" id="2001045346337"/>
			<StringLiteral type="char [3]" spelling="&quot;: &quot;" id="2003226834994"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001367181732"/>
			<DeclRefExpr type="error_level" spelling="level" id="2003611132792"/>
			<DeclRefExpr type="error_level" spelling="level" id="2001718516187"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002954543357"/>
			<DeclRefExpr type="error_level" spelling="level" id="2000777205722"/>
			<DeclRefExpr type="int" spelling="INFORMATION" id="2004181038811"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2000818802445"/>
			<DeclRefExpr type="int" spelling="LIBPNG_WARNING" id="2001646551734"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2001233013187"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2002423486589"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2004096521738"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2000795361327"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2000708900651"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2002901956756"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2002967150252"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2000946044674"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2003688151186"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2001668409518"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2004255711803"/>
			<DeclRefExpr type="int" spelling="USER_ERROR" id="2000511998906"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2004149644320"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2000292848434"/>
			<DeclRefExpr type="int" spelling="VERBOSE" id="2001098962054"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2003615879101"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2003287839571"/>
			<DeclRefExpr type="int" spelling="QUIET" id="2003921075125"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2002112920626"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2002840498613"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2004074755805"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002049649723"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000537369326"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2004078266699"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002775753190"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002043890901"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003195530966"/>
			<DeclRefExpr type="int (int)" spelling="is_combo" id="2001551238068"/>
			<DeclRefExpr type="int" spelling="tr" id="2004191875860"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003433493210"/>
			<DeclRefExpr type="int" spelling="tr" id="2001369343853"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2003025345132"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2002966417195"/>
			<DeclRefExpr type="int" spelling="trx" id="2000051531315"/>
			<DeclRefExpr type="int" spelling="trx" id="2002503384934"/>
			<DeclRefExpr type="int" spelling="trx" id="2004040505881"/>
			<DeclRefExpr type="int" spelling="trx" id="2001008225342"/>
			<DeclRefExpr type="int" spelling="start" id="2000671662022"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2003125342227"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2003452621960"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2003770722805"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2004102382374"/>
			<DeclRefExpr type="const char *(int)" spelling="transform_name" id="2002407083298"/>
			<DeclRefExpr type="int" spelling="trz" id="2000192275811"/>
			<DeclRefExpr type="int" spelling="start" id="2003600773169"/>
			<DeclRefExpr type="int" spelling="trx" id="2003423345127"/>
			<DeclRefExpr type="int" spelling="trz" id="2000389032264"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2003948043938"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2000878704890"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2002743609520"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2003905350994"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2003195264257"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2003242041461"/>
			<DeclRefExpr type="int" spelling="tr" id="2000362871532"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2002415528037"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2003345028159"/>
			<DeclRefExpr type="const char *(int)" spelling="transform_name" id="2002631342716"/>
			<DeclRefExpr type="int" spelling="tr" id="2002008805534"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2000611952752"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2001594269382"/>
			<DeclRefExpr type="&lt;builtin fn type&gt;" spelling="__builtin_va_start" id="2001982332917"/>
			<DeclRefExpr type="va_list" spelling="ap" id="2002289767637"/>
			<DeclRefExpr type="const char *" spelling="fmt" id="2003552752093"/>
			<DeclRefExpr type="int (FILE *, const char *, struct __va_list_tag *)" spelling="vfprintf" id="2001419104348"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2004202136376"/>
			<DeclRefExpr type="const char *" spelling="fmt" id="2003530795980"/>
			<DeclRefExpr type="va_list" spelling="ap" id="2001469362496"/>
			<DeclRefExpr type="&lt;builtin fn type&gt;" spelling="__builtin_va_end" id="2000739383198"/>
			<DeclRefExpr type="va_list" spelling="ap" id="2002410496750"/>
			<DeclRefExpr type="int (int, FILE *)" spelling="fputc" id="2004001806555"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2002578478696"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002783931906"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2001490599293"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002628346662"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2001029859324"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000380923555"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2000309355900"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001094493829"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002041554078"/>
			<VarDecl type="const char *" spelling="lp" id="2001792172038"/>
			<VarDecl type="va_list" spelling="ap" id="2002919149097"/>
			<VarDecl type="int" spelling="tr" id="2001183045920"/>
			<VarDecl type="int" spelling="trx" id="2002787273990"/>
			<VarDecl type="int" spelling="start" id="2000078621947"/>
			<VarDecl type="int" spelling="trz" id="2001525548702"/>
			<FunctionDecl type="void (struct __va_list_tag *)" spelling="__builtin_va_end" id="2000993256903"/>
			<FunctionDecl type="void (struct __va_list_tag *, ...)" spelling="__builtin_va_start" id="2003443723684"/>
			<FunctionDecl type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000589979736"/>
			<CallExpr type="int" spelling="fprintf" id="2004123877718"/>
			<CallExpr type="int" spelling="is_combo" id="2001308616853"/>
			<CallExpr type="int" spelling="fprintf" id="2001335580146"/>
			<CallExpr type="int" spelling="fprintf" id="2001291131423"/>
			<CallExpr type="int" spelling="fprintf" id="2000597398073"/>
			<CallExpr type="const char *" spelling="transform_name" id="2002094745136"/>
			<CallExpr type="int" spelling="fprintf" id="2000388911325"/>
			<CallExpr type="int" spelling="fprintf" id="2002801852707"/>
			<CallExpr type="int" spelling="fprintf" id="2001049626522"/>
			<CallExpr type="int" spelling="fprintf" id="2001911126451"/>
			<CallExpr type="const char *" spelling="transform_name" id="2002938144109"/>
			<CallExpr type="int" spelling="fprintf" id="2002903172225"/>
			<CallExpr type="void" spelling="__builtin_va_start" id="2002062886921"/>
			<CallExpr type="int" spelling="vfprintf" id="2003684390718"/>
			<CallExpr type="void" spelling="__builtin_va_end" id="2002085465549"/>
			<CallExpr type="int" spelling="fputc" id="2000450770874"/>
			<CallExpr type="void" spelling="longjmp" id="2004093347503"/>
			<TypeRef type="error_level" spelling="error_level" id="2002023649129"/>
			<TypeRef type="va_list" spelling="va_list" id="2003476126941"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="level" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="level" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="anything unexpected is an internal error:" comment_scope_start="707" comment_scope_end="707">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2000292848434"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="else do not output any message" comment_scope_start="762" comment_scope_end="767">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000394744888"/>
			<MemberRefExpr type="jmp_buf" spelling="error_return" id="2000870181826"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2002436978036"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002038377929"/>
			<UnexposedExpr type="unsigned int" spelling="APP_FAIL" id="2001783876087"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2001246338087"/>
			<UnexposedExpr type="error_level" spelling="level" id="2004014008853"/>
			<UnexposedExpr type="unsigned int" spelling="ERRORS" id="2003803488004"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001380860968"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002530990396"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2001071090820"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="error_return" id="2002990760487"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000154394149"/>
			<UnexposedExpr type="int" spelling="level" id="2002744060680"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002329370205"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002783931906"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2001490599293"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002628346662"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2001029859324"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000380923555"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2000309355900"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001094493829"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002041554078"/>
			<FunctionDecl type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000589979736"/>
			<CallExpr type="void" spelling="longjmp" id="2004093347503"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Errors cause this routine to exit to the fail code" comment_scope_start="762" comment_scope_end="767">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000394744888"/>
			<MemberRefExpr type="jmp_buf" spelling="error_return" id="2000870181826"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2002436978036"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002038377929"/>
			<UnexposedExpr type="unsigned int" spelling="APP_FAIL" id="2001783876087"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2001246338087"/>
			<UnexposedExpr type="error_level" spelling="level" id="2004014008853"/>
			<UnexposedExpr type="unsigned int" spelling="ERRORS" id="2003803488004"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001380860968"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002530990396"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2001071090820"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="error_return" id="2002990760487"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000154394149"/>
			<UnexposedExpr type="int" spelling="level" id="2002744060680"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002329370205"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002783931906"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2001490599293"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002628346662"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2001029859324"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000380923555"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2000309355900"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001094493829"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002041554078"/>
			<FunctionDecl type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000589979736"/>
			<CallExpr type="void" spelling="longjmp" id="2004093347503"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="exit" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="fail" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="error handler callbacks for libpng" comment_scope_start="769" comment_scope_end="785">
		<SYMBOLS>
			<ParmDecl type="png_structp" spelling="pp" id="2002780058266"/>
			<ParmDecl type="png_const_charp" spelling="warning" id="2001906658753"/>
			<ParmDecl type="png_structp" spelling="pp" id="2001088438972"/>
			<ParmDecl type="png_const_charp" spelling="error" id="2001879907563"/>
			<ParmDecl type="struct display *" spelling="dp" id="2002588627205"/>
			<ParmDecl type="const char *" spelling="filename" id="2003294581637"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000110830507"/>
			<UnexposedExpr type="struct display *(*)(png_structp)" spelling="get_dp" id="2000730408333"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2004060949764"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_WARNING" id="2001428272289"/>
			<UnexposedExpr type="png_const_charp" spelling="warning" id="2002890309304"/>
			<UnexposedExpr type="struct display *(*)(png_structp)" spelling="get_dp" id="2003240498492"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2002055843214"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000164456801"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000609178404"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_ERROR" id="2000126124601"/>
			<UnexposedExpr type="png_const_charp" spelling="error" id="2002635971869"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2002883319982"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2004238998182"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001001101056"/>
			<DeclRefExpr type="struct display *(png_structp)" spelling="get_dp" id="2001561520403"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002517095555"/>
			<DeclRefExpr type="int" spelling="LIBPNG_WARNING" id="2001261730175"/>
			<DeclRefExpr type="png_const_charp" spelling="warning" id="2001120959461"/>
			<DeclRefExpr type="struct display *(png_structp)" spelling="get_dp" id="2002911255439"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002226387858"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000161200046"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001385888705"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2004219835985"/>
			<DeclRefExpr type="png_const_charp" spelling="error" id="2003674383189"/>
			<VarDecl type="struct display *" spelling="dp" id="2002321683624"/>
			<FunctionDecl type="void (png_structp, png_const_charp)" spelling="display_warning" id="2000509070379"/>
			<FunctionDecl type="void (png_structp, png_const_charp)" spelling="display_error" id="2001633181062"/>
			<CallExpr type="void" spelling="display_log" id="2003017584288"/>
			<CallExpr type="struct display *" spelling="get_dp" id="2000053721682"/>
			<CallExpr type="struct display *" spelling="get_dp" id="2000484277930"/>
			<CallExpr type="void" spelling="display_log" id="2001165817460"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2003724623903"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2001862071885"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2003724623903"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2001862071885"/>
			<TypeRef type="struct display" spelling="struct display" id="2001291171455"/>
			<TypeRef type="struct display" spelling="struct display" id="2001291171455"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Does the initial cache of the file." comment_scope_start="786" comment_scope_end="809">
		<SYMBOLS>
			<MemberRefExpr type="const char *" spelling="filename" id="2002008832452"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2004023833610"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001538322370"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2002803212269"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2000436587776"/>
			<UnexposedExpr type="FILE *(*)(const char *, const char *)" spelling="fopen" id="2004219940614"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2003652807624"/>
			<UnexposedExpr type="FILE *" spelling="fp" id="2001667696304"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003460161229"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003563965228"/>
			<UnexposedExpr type="error_level" spelling="USER_ERROR" id="2002305966089"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2004138886523"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2003042235954"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdin" id="2002615439734"/>
			<UnexposedExpr type="int (*)(struct buffer *, FILE *)" spelling="buffer_from_file" id="2003513454078"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003593364092"/>
			<UnexposedExpr type="FILE *" spelling="fp" id="2000668394586"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fclose" id="2001344323467"/>
			<UnexposedExpr type="FILE *" spelling="fp" id="2003175023604"/>
			<UnexposedExpr type="int" spelling="ret" id="2003574256397"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001570758324"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001667302600"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2002936719676"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2003576157758"/>
			<UnexposedExpr type="int" spelling="ret" id="2003378244705"/>
			<StringLiteral type="char [3]" spelling="&quot;rb&quot;" id="2000272609044"/>
			<StringLiteral type="char [16]" spelling="&quot;open failed: %s&quot;" id="2003645633593"/>
			<StringLiteral type="char [16]" spelling="&quot;read failed: %s&quot;" id="2001871918742"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003449087558"/>
			<DeclRefExpr type="const char *" spelling="filename" id="2002883643743"/>
			<DeclRefExpr type="const char *" spelling="filename" id="2000837417686"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2000970548413"/>
			<DeclRefExpr type="FILE *(const char *, const char *)" spelling="fopen" id="2003438087067"/>
			<DeclRefExpr type="const char *" spelling="filename" id="2003096699173"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2003045900193"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000822313965"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000707359242"/>
			<DeclRefExpr type="int" spelling="USER_ERROR" id="2002175862301"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2002216373858"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2003318376775"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2000736022723"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdin" id="2002949668284"/>
			<DeclRefExpr type="int" spelling="ret" id="2001517414516"/>
			<DeclRefExpr type="int (struct buffer *, FILE *)" spelling="buffer_from_file" id="2003728835401"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003167786336"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2001095290723"/>
			<DeclRefExpr type="int (FILE *)" spelling="fclose" id="2001066388140"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2002903184328"/>
			<DeclRefExpr type="int" spelling="ret" id="2002511684620"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001349878189"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002424716076"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2003573281025"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2003796543687"/>
			<DeclRefExpr type="int" spelling="ret" id="2003600523391"/>
			<VarDecl type="FILE *" spelling="fp" id="2003085755499"/>
			<VarDecl type="int" spelling="ret" id="2003346033028"/>
			<FunctionDecl type="void (struct display *, const char *)" spelling="display_cache_file" id="2001731149492"/>
			<CallExpr type="FILE *" spelling="fopen" id="2001977024942"/>
			<CallExpr type="void" spelling="display_log" id="2003208971453"/>
			<CallExpr type="char *" spelling="strerror" id="2002521001941"/>
			<CallExpr type="int *" spelling="__errno_location" id="2003690753328"/>
			<CallExpr type="int" spelling="buffer_from_file" id="2000991112950"/>
			<CallExpr type="int" spelling="fclose" id="2003548131952"/>
			<CallExpr type="void" spelling="display_log" id="2003444829595"/>
			<CallExpr type="char *" spelling="strerror" id="2001210573608"/>
			<TypeRef type="FILE" spelling="FILE" id="2002359927549"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="NOTREACHED" comment_scope_start="827" comment_scope_end="829"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Move to the next buffer:" comment_scope_start="833" comment_scope_end="835">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2001302324926"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2004255743790"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002616744403"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000499161194"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2003201682232"/>
			<DeclRefExpr type="size_t" spelling="read_count" id="2003302627635"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Avoid update outside the loop" comment_scope_start="836" comment_scope_end="836">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer_list *" spelling="current" id="2000786477003"/>
			<UnexposedExpr type="struct buffer *" spelling="bp" id="2001389819758"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002637369091"/>
			<DeclRefExpr type="struct buffer *" spelling="bp" id="2002917906855"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000129369057"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="And do a sanity check (the EOF case is caught above)" comment_scope_start="838" comment_scope_end="844">
		<SYMBOLS>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002257039252"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001175068888"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003501336667"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2002492032389"/>
			<StringLiteral type="char [20]" spelling="&quot;damaged buffer list&quot;" id="2001616728893"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002487406389"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002267917403"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000512436625"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2001119739131"/>
			<CallExpr type="void" spelling="display_log" id="2001287922870"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="caught" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="NOTREACHED" comment_scope_start="842" comment_scope_end="844"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="This cleans out any previous read and sets operation and transforms to
    * empty." comment_scope_start="873" comment_scope_end="877">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_clean_read" id="2003684883464"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001377877589"/>
			<DeclRefExpr type="void (struct display *)" spelling="display_clean_read" id="2004139958167"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003645395079"/>
			<CallExpr type="void" spelling="display_clean_read" id="2002192843955"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="empty" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="else this is a verify and do not overwrite info" comment_scope_start="878" comment_scope_end="878">
		<SYMBOLS>
			<UnexposedExpr type="const char *" spelling="operation" id="2002993477842"/>
			<DeclRefExpr type="const char *" spelling="operation" id="2000161006154"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="The png_read_png API requires us to make the info struct, but it does the
    * call to png_read_info." comment_scope_start="889" comment_scope_end="896">
		<SYMBOLS>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2003440140881"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002333625243"/>
			<UnexposedExpr type="png_infop (*)(png_const_structrp)" spelling="png_create_info_struct" id="2000232303927"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2003444796118"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2000793030892"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2000505447102"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000712750354"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001752077397"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_ERROR" id="2000099691142"/>
			<StringLiteral type="char [29]" spelling="&quot;failed to create info struct&quot;" id="2001984470308"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001360386408"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2003790012373"/>
			<DeclRefExpr type="png_infop (png_const_structrp)" spelling="png_create_info_struct" id="2000850306707"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2000760396498"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2000769081241"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002785629288"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001576979978"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2000473069695"/>
			<CallExpr type="png_infop" spelling="png_create_info_struct" id="2003294906763"/>
			<CallExpr type="void" spelling="display_log" id="2002320963599"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="struct" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Remove the user limits, if any" comment_scope_start="897" comment_scope_end="900">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2002473027445"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2003314284794"/>
			<DeclRefExpr type="void (png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2000750568973"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2001131791384"/>
			<CallExpr type="void" spelling="png_set_user_limits" id="2001512221201"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Set the IO handling" comment_scope_start="901" comment_scope_end="904">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_start_read" id="2001942103337"/>
			<UnexposedExpr type="struct buffer *" spelling="bp" id="2004212698597"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2002585136325"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2000650245084"/>
			<UnexposedExpr type="png_voidp" spelling="bp" id="2001406891062"/>
			<UnexposedExpr type="struct buffer *" spelling="bp" id="2000734658385"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="read_function" id="2001404423911"/>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_start_read" id="2000671451877"/>
			<DeclRefExpr type="struct buffer *" spelling="bp" id="2000955223488"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2002509937327"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2003048143690"/>
			<DeclRefExpr type="struct buffer *" spelling="bp" id="2003100904961"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="read_function" id="2002290966260"/>
			<CallExpr type="void" spelling="buffer_start_read" id="2001053509359"/>
			<CallExpr type="void" spelling="png_set_read_fn" id="2000204195648"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="params" comment_scope_start="905" comment_scope_end="905">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp, int, png_voidp)" spelling="png_read_png" id="2001029605112"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2002972030725"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2001384711705"/>
			<UnexposedExpr type="int" spelling="transforms" id="2003269559902"/>
			<DeclRefExpr type="void (png_structrp, png_inforp, int, png_voidp)" spelling="png_read_png" id="2001408101689"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2003204800166"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2002814601981"/>
			<DeclRefExpr type="int" spelling="transforms" id="2002901695725"/>
			<CallExpr type="void" spelling="png_read_png" id="2000602682601"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="crazy debugging" comment_scope_start="907" comment_scope_end="907"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="called once after the first read to update all the info, original_pp and
    * original_ip must have been filled in." comment_scope_start="926" comment_scope_end="997">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2002064640038"/>
			<MemberRefExpr type="png_structp" spelling="original_pp" id="2000694112464"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2003321142884"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2000272920034"/>
			<MemberRefExpr type="png_infop" spelling="original_ip" id="2000126309836"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2003186876991"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2000805120990"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2001502202003"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2002334670066"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2000799938962"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2003932187775"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2004000062203"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2002174888794"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2000508187857"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2002863872342"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2000682639338"/>
			<MemberRefExpr type="int" spelling="color_type" id="2003517265481"/>
			<MemberRefExpr type="int" spelling="interlace_method" id="2002487093488"/>
			<MemberRefExpr type="int" spelling="compression_method" id="2001426898592"/>
			<MemberRefExpr type="int" spelling="filter_method" id="2000105919072"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2001035512396"/>
			<MemberRefExpr type="int" spelling="color_type" id="2001482381553"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2000133639894"/>
			<MemberRefExpr type="const char *" spelling="name" id="2001256985451"/>
			<MemberRefExpr type="int" spelling="transform" id="2002626679613"/>
			<MemberRefExpr type="png_uint_32" spelling="valid_chunks" id="2002134954609"/>
			<MemberRefExpr type="png_uint_32" spelling="valid_chunks" id="2002001038591"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_required" id="2001171455277"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_required" id="2003127896048"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_absent" id="2003759571741"/>
			<MemberRefExpr type="png_byte" spelling="bit_depths" id="2000548466886"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2004194091017"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2000453551053"/>
			<MemberRefExpr type="int" spelling="active_transforms" id="2004246964038"/>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2004279433818"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002202893894"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003739124672"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002401218550"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001064133073"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2001916298996"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002438154064"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000283095263"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003915455401"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2000119751396"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003347916309"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001421859758"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004273534212"/>
			<UnexposedExpr type="size_t (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2002869059586"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2002061973019"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2003600140107"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2001226796901"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2000265230173"/>
			<UnexposedExpr type="size_t" spelling="original_rowbytes" id="2004010812065"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003810510703"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002136876328"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003917193447"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2002560462962"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001971430198"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2003298573821"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2002481217244"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2001889809286"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2002664949262"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2001314500509"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2004167141028"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002692200274"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003984960170"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002072902325"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2004074362849"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003122360555"/>
			<UnexposedExpr type="png_bytepp (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rows" id="2003085429268"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2000121075730"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2004121954856"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2001812318412"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2003719106660"/>
			<UnexposedExpr type="png_bytepp" spelling="original_rows" id="2003519447266"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001687643591"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002787665421"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001654221882"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2002860804406"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)" spelling="png_get_IHDR" id="2003542680740"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2002499934335"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2001323319825"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2003406625538"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2001230926018"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000885662657"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002849864295"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002145934419"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002402285609"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002885638529"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002840866533"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002555021540"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001021712393"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001991393096"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2001334574712"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2000864160881"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003429487180"/>
			<UnexposedExpr type="int" spelling="color_type" id="2000643654063"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002409419651"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003897955126"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001944799889"/>
			<UnexposedExpr type="unsigned long" spelling="i" id="2004240128235"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003486541871"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000204059068"/>
			<UnexposedExpr type="const char *" spelling="name" id="2003539721153"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000125123391"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003504173705"/>
			<UnexposedExpr type="int" spelling="transform" id="2001350607956"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002623998471"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002746893840"/>
			<UnexposedExpr type="png_uint_32" spelling="valid_chunks" id="2003583412089"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002559604411"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003154370392"/>
			<UnexposedExpr type="png_uint_32" spelling="valid_chunks" id="2000121185662"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000248534616"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001018284778"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2000839655602"/>
			<UnexposedExpr type="int" spelling="color_mask_required" id="2000106461930"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_required" id="2001786940027"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001225818896"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002637238311"/>
			<UnexposedExpr type="int" spelling="ct" id="2003877192963"/>
			<UnexposedExpr type="int" spelling="color_mask_required" id="2002826901948"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_required" id="2004100025815"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001377972346"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002647882628"/>
			<UnexposedExpr type="int" spelling="color_mask_absent" id="2002578989751"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_absent" id="2003977428810"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003748613249"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001412034698"/>
			<UnexposedExpr type="int" spelling="ct" id="2002992087825"/>
			<UnexposedExpr type="int" spelling="bit_depths" id="2003385349164"/>
			<UnexposedExpr type="png_byte" spelling="bit_depths" id="2002993533368"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002790393515"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002707124891"/>
			<UnexposedExpr type="int" spelling="bd" id="2003724909296"/>
			<UnexposedExpr type="int" spelling="when" id="2003494473558"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2001351450342"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2004094970968"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002037813344"/>
			<UnexposedExpr type="int" spelling="transform" id="2001632843712"/>
			<UnexposedExpr type="int" spelling="when" id="2002508703910"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2000644536828"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001867047053"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2000976864042"/>
			<UnexposedExpr type="int" spelling="transform" id="2001523636189"/>
			<UnexposedExpr type="int" spelling="active" id="2002811535252"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003600710854"/>
			<UnexposedExpr type="int" spelling="active" id="2002693787101"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000848923554"/>
			<UnexposedExpr type="int" spelling="inactive" id="2000499601512"/>
			<StringLiteral type="char [14]" spelling="&quot;original read&quot;" id="2000041093764"/>
			<StringLiteral type="char [28]" spelling="&quot;png_get_rowbytes returned 0&quot;" id="2000171084813"/>
			<StringLiteral type="char [35]" spelling="&quot;png_read_png did not set IDAT flag&quot;" id="2001251481317"/>
			<StringLiteral type="char [40]" spelling="&quot;png_read_png did not create row buffers&quot;" id="2003542047004"/>
			<StringLiteral type="char [20]" spelling="&quot;png_get_IHDR failed&quot;" id="2001130775220"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002430653191"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003776815202"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002431126942"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000980896759"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2003062940157"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002196436453"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000227892821"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000584159525"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2000689156077"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003819672098"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001396610388"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002766918755"/>
			<DeclRefExpr type="size_t (png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2001328532829"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002416225912"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2000110602262"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001268486955"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000774843505"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003733705230"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2003934812526"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000186628891"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2000236117060"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002410892567"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2001092015893"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001555800968"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002818522112"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003146848205"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2001842526015"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003407447607"/>
			<DeclRefExpr type="png_bytepp (png_const_structrp, png_const_inforp)" spelling="png_get_rows" id="2000650222428"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002730250893"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2004141700967"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002121835638"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002326972635"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000349639121"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2001468415203"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)" spelling="png_get_IHDR" id="2003487342556"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2001492832566"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2002685768522"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000028754333"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003743609648"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002690884008"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004152697753"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003668855682"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001593449140"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001545471454"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002031428146"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003090970646"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2002293527240"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001195033726"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001089769730"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002029740134"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000565941265"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001363007527"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002040265896"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002759922528"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003096885192"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001587684756"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003218127397"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2004193454865"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003783633001"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002415343312"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2004216549704"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002038112210"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000703449024"/>
			<DeclRefExpr type="png_uint_32" spelling="chunks" id="2002553358951"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003589231694"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000398431125"/>
			<DeclRefExpr type="int" spelling="ct" id="2003526670462"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003534775662"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002655618005"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003587188294"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001116021824"/>
			<DeclRefExpr type="int" spelling="ct" id="2002279970417"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002030421306"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000842030377"/>
			<DeclRefExpr type="int" spelling="bd" id="2001772442102"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000156133012"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003938984126"/>
			<DeclRefExpr type="int" spelling="active" id="2000280360917"/>
			<DeclRefExpr type="int" spelling="transform" id="2003970968063"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003261932507"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002643529979"/>
			<DeclRefExpr type="int" spelling="inactive" id="2000012685051"/>
			<DeclRefExpr type="int" spelling="transform" id="2000600969886"/>
			<DeclRefExpr type="int" spelling="inactive" id="2003172351389"/>
			<DeclRefExpr type="int" spelling="active" id="2003468630026"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001657218570"/>
			<DeclRefExpr type="int" spelling="active" id="2002163694858"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003160795324"/>
			<DeclRefExpr type="int" spelling="inactive" id="2000417336065"/>
			<VarDecl type="png_structp" spelling="pp" id="2000104815994"/>
			<VarDecl type="png_infop" spelling="ip" id="2002350511542"/>
			<VarDecl type="png_uint_32" spelling="chunks" id="2001833342524"/>
			<VarDecl type="int" spelling="active" id="2002462328758"/>
			<VarDecl type="int" spelling="inactive" id="2001343996136"/>
			<VarDecl type="int" spelling="ct" id="2000748819650"/>
			<VarDecl type="int" spelling="bd" id="2002407076495"/>
			<VarDecl type="unsigned int" spelling="i" id="2002016410083"/>
			<VarDecl type="int" spelling="transform" id="2002842319451"/>
			<FunctionDecl type="void (struct display *)" spelling="update_display" id="2004212022101"/>
			<CallExpr type="void" spelling="read_png" id="2001762870005"/>
			<CallExpr type="size_t" spelling="png_get_rowbytes" id="2003141284542"/>
			<CallExpr type="void" spelling="display_log" id="2000289689407"/>
			<CallExpr type="png_uint_32" spelling="png_get_valid" id="2000655427735"/>
			<CallExpr type="void" spelling="display_log" id="2000738801412"/>
			<CallExpr type="png_bytepp" spelling="png_get_rows" id="2002131085729"/>
			<CallExpr type="void" spelling="display_log" id="2000704322633"/>
			<CallExpr type="png_uint_32" spelling="png_get_IHDR" id="2002263025685"/>
			<CallExpr type="void" spelling="display_log" id="2004270761800"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2003724623903"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2002775950877"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2000596470660"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Now perform the initial read with a 0 transform." comment_scope_start="933" comment_scope_end="933"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="no transform" comment_scope_start="934" comment_scope_end="934">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2002064640038"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002202893894"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003739124672"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002401218550"/>
			<StringLiteral type="char [14]" spelling="&quot;original read&quot;" id="2000041093764"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002430653191"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003776815202"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002431126942"/>
			<CallExpr type="void" spelling="read_png" id="2001762870005"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Move the result to the 'original' fields" comment_scope_start="936" comment_scope_end="944">
		<SYMBOLS>
			<MemberRefExpr type="png_structp" spelling="original_pp" id="2000694112464"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2003321142884"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2000272920034"/>
			<MemberRefExpr type="png_infop" spelling="original_ip" id="2000126309836"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2003186876991"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2000805120990"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2001502202003"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2002334670066"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2000799938962"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001064133073"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2001916298996"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002438154064"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000283095263"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003915455401"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2000119751396"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003347916309"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001421859758"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004273534212"/>
			<UnexposedExpr type="size_t (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2002869059586"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2002061973019"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2003600140107"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2001226796901"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2000265230173"/>
			<UnexposedExpr type="size_t" spelling="original_rowbytes" id="2004010812065"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003810510703"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002136876328"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003917193447"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2002560462962"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001971430198"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2003298573821"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2002481217244"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2001889809286"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2002664949262"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2001314500509"/>
			<StringLiteral type="char [28]" spelling="&quot;png_get_rowbytes returned 0&quot;" id="2000171084813"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000980896759"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2003062940157"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002196436453"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000227892821"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000584159525"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2000689156077"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003819672098"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001396610388"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002766918755"/>
			<DeclRefExpr type="size_t (png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2001328532829"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002416225912"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2000110602262"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001268486955"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000774843505"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003733705230"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2003934812526"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000186628891"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2000236117060"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002410892567"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2001092015893"/>
			<CallExpr type="size_t" spelling="png_get_rowbytes" id="2003141284542"/>
			<CallExpr type="void" spelling="display_log" id="2000289689407"/>
			<CallExpr type="png_uint_32" spelling="png_get_valid" id="2000655427735"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="set by png_read_png" comment_scope_start="945" comment_scope_end="945">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2003932187775"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2004167141028"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002692200274"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001555800968"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="'active' transforms are discovered based on the original image format;
    * running one active transform can activate others.  At present the code
    * does not attempt to determine the closure." comment_scope_start="957" comment_scope_end="996">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2001035512396"/>
			<MemberRefExpr type="int" spelling="color_type" id="2001482381553"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2000133639894"/>
			<MemberRefExpr type="const char *" spelling="name" id="2001256985451"/>
			<MemberRefExpr type="int" spelling="transform" id="2002626679613"/>
			<MemberRefExpr type="png_uint_32" spelling="valid_chunks" id="2002134954609"/>
			<MemberRefExpr type="png_uint_32" spelling="valid_chunks" id="2002001038591"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_required" id="2001171455277"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_required" id="2003127896048"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_absent" id="2003759571741"/>
			<MemberRefExpr type="png_byte" spelling="bit_depths" id="2000548466886"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2004194091017"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2000453551053"/>
			<MemberRefExpr type="int" spelling="active_transforms" id="2004246964038"/>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2004279433818"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2000864160881"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003429487180"/>
			<UnexposedExpr type="int" spelling="color_type" id="2000643654063"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002409419651"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003897955126"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001944799889"/>
			<UnexposedExpr type="unsigned long" spelling="i" id="2004240128235"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003486541871"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000204059068"/>
			<UnexposedExpr type="const char *" spelling="name" id="2003539721153"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000125123391"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003504173705"/>
			<UnexposedExpr type="int" spelling="transform" id="2001350607956"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002623998471"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002746893840"/>
			<UnexposedExpr type="png_uint_32" spelling="valid_chunks" id="2003583412089"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002559604411"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003154370392"/>
			<UnexposedExpr type="png_uint_32" spelling="valid_chunks" id="2000121185662"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000248534616"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001018284778"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2000839655602"/>
			<UnexposedExpr type="int" spelling="color_mask_required" id="2000106461930"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_required" id="2001786940027"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001225818896"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002637238311"/>
			<UnexposedExpr type="int" spelling="ct" id="2003877192963"/>
			<UnexposedExpr type="int" spelling="color_mask_required" id="2002826901948"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_required" id="2004100025815"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001377972346"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002647882628"/>
			<UnexposedExpr type="int" spelling="color_mask_absent" id="2002578989751"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_absent" id="2003977428810"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003748613249"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001412034698"/>
			<UnexposedExpr type="int" spelling="ct" id="2002992087825"/>
			<UnexposedExpr type="int" spelling="bit_depths" id="2003385349164"/>
			<UnexposedExpr type="png_byte" spelling="bit_depths" id="2002993533368"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002790393515"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002707124891"/>
			<UnexposedExpr type="int" spelling="bd" id="2003724909296"/>
			<UnexposedExpr type="int" spelling="when" id="2003494473558"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2001351450342"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2004094970968"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002037813344"/>
			<UnexposedExpr type="int" spelling="transform" id="2001632843712"/>
			<UnexposedExpr type="int" spelling="when" id="2002508703910"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2000644536828"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001867047053"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2000976864042"/>
			<UnexposedExpr type="int" spelling="transform" id="2001523636189"/>
			<UnexposedExpr type="int" spelling="active" id="2002811535252"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003600710854"/>
			<UnexposedExpr type="int" spelling="active" id="2002693787101"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000848923554"/>
			<UnexposedExpr type="int" spelling="inactive" id="2000499601512"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001195033726"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001089769730"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002029740134"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000565941265"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001363007527"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002040265896"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002759922528"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003096885192"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001587684756"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003218127397"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2004193454865"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003783633001"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002415343312"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2004216549704"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002038112210"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000703449024"/>
			<DeclRefExpr type="png_uint_32" spelling="chunks" id="2002553358951"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003589231694"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000398431125"/>
			<DeclRefExpr type="int" spelling="ct" id="2003526670462"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003534775662"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002655618005"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003587188294"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001116021824"/>
			<DeclRefExpr type="int" spelling="ct" id="2002279970417"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002030421306"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000842030377"/>
			<DeclRefExpr type="int" spelling="bd" id="2001772442102"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000156133012"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003938984126"/>
			<DeclRefExpr type="int" spelling="active" id="2000280360917"/>
			<DeclRefExpr type="int" spelling="transform" id="2003970968063"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003261932507"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002643529979"/>
			<DeclRefExpr type="int" spelling="inactive" id="2000012685051"/>
			<DeclRefExpr type="int" spelling="transform" id="2000600969886"/>
			<DeclRefExpr type="int" spelling="inactive" id="2003172351389"/>
			<DeclRefExpr type="int" spelling="active" id="2003468630026"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001657218570"/>
			<DeclRefExpr type="int" spelling="active" id="2002163694858"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003160795324"/>
			<DeclRefExpr type="int" spelling="inactive" id="2000417336065"/>
			<VarDecl type="png_uint_32" spelling="chunks" id="2001833342524"/>
			<VarDecl type="int" spelling="active" id="2002462328758"/>
			<VarDecl type="int" spelling="inactive" id="2001343996136"/>
			<VarDecl type="int" spelling="ct" id="2000748819650"/>
			<VarDecl type="int" spelling="bd" id="2002407076495"/>
			<VarDecl type="unsigned int" spelling="i" id="2002016410083"/>
			<VarDecl type="int" spelling="transform" id="2002842319451"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2000596470660"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="determine" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Some transforms appear multiple times in the table; the 'active' status
       * is the logical OR of these and the inactive status must be adjusted to
       * take this into account." comment_scope_start="988" comment_scope_end="994">
		<SYMBOLS>
			<MemberRefExpr type="int" spelling="active_transforms" id="2004246964038"/>
			<UnexposedExpr type="int" spelling="active" id="2002811535252"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003600710854"/>
			<UnexposedExpr type="int" spelling="active" id="2002693787101"/>
			<DeclRefExpr type="int" spelling="inactive" id="2003172351389"/>
			<DeclRefExpr type="int" spelling="active" id="2003468630026"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001657218570"/>
			<DeclRefExpr type="int" spelling="active" id="2002163694858"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="excluding write-only transforms" comment_scope_start="995" comment_scope_end="995">
		<SYMBOLS>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2004279433818"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000848923554"/>
			<UnexposedExpr type="int" spelling="inactive" id="2000499601512"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003160795324"/>
			<DeclRefExpr type="int" spelling="inactive" id="2000417336065"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Compare the png_info from read_ip with original_info" comment_scope_start="1002" comment_scope_end="1016">
		<SYMBOLS>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2003708706458"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2000858870707"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)" spelling="png_get_IHDR" id="2002307263837"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2004258969087"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2002448428335"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003396548309"/>
			<UnexposedExpr type="const png_info *" spelling="read_ip" id="2002121203237"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2001009934567"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000604510832"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001015231901"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002299699942"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2003614376934"/>
			<StringLiteral type="char [20]" spelling="&quot;png_get_IHDR failed&quot;" id="2000493284419"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)" spelling="png_get_IHDR" id="2002164629928"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001838973403"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001533477160"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2002115930598"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2002948510057"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001125009177"/>
			<DeclRefExpr type="int" spelling="color_type" id="2002248758464"/>
			<DeclRefExpr type="int" spelling="interlace_method" id="2003750935556"/>
			<DeclRefExpr type="int" spelling="compression_method" id="2001230679688"/>
			<DeclRefExpr type="int" spelling="filter_method" id="2000514444169"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002151663855"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002092714743"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2000077305685"/>
			<VarDecl type="size_t" spelling="rowbytes" id="2004227535903"/>
			<VarDecl type="png_uint_32" spelling="width" id="2000891254201"/>
			<VarDecl type="png_uint_32" spelling="height" id="2000776347234"/>
			<VarDecl type="int" spelling="bit_depth" id="2001122352374"/>
			<VarDecl type="int" spelling="color_type" id="2003440485540"/>
			<VarDecl type="int" spelling="interlace_method" id="2001291128749"/>
			<VarDecl type="int" spelling="compression_method" id="2003617243493"/>
			<VarDecl type="int" spelling="filter_method" id="2000656030115"/>
			<VarDecl type="const char *" spelling="e" id="2002658222288"/>
			<CallExpr type="png_uint_32" spelling="png_get_IHDR" id="2001105142774"/>
			<CallExpr type="void" spelling="display_log" id="2004103204387"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2000596470660"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="The IHDR should be identical:" comment_scope_start="1017" comment_scope_end="1025">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2000006739459"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2003569692271"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2001805568763"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2000461166268"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2003631040793"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2001674484047"/>
			<MemberRefExpr type="int" spelling="color_type" id="2000697884503"/>
			<MemberRefExpr type="int" spelling="color_type" id="2000852106240"/>
			<MemberRefExpr type="int" spelling="interlace_method" id="2001401050625"/>
			<MemberRefExpr type="int" spelling="interlace_method" id="2003787607452"/>
			<MemberRefExpr type="int" spelling="compression_method" id="2003433373812"/>
			<MemberRefExpr type="int" spelling="compression_method" id="2001428119653"/>
			<MemberRefExpr type="int" spelling="filter_method" id="2003074347891"/>
			<MemberRefExpr type="int" spelling="filter_method" id="2000966771421"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2004171261308"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2003633598182"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002103541996"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000079041370"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002153549848"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2001651862143"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2001617771086"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001933290482"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2003331851375"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2003864187824"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2001862752016"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004109155558"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001052535280"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000174317683"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2002185885930"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2000268964763"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000864835065"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2002880049652"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001861163275"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003366543008"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003435891829"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002251447527"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001952547681"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2003367581809"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003740473904"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001577855434"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003927709673"/>
			<UnexposedExpr type="int" spelling="color_type" id="2003735615284"/>
			<UnexposedExpr type="int" spelling="color_type" id="2002047226606"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003269954678"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001724481563"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003006032993"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2002942910526"/>
			<UnexposedExpr type="int" spelling="color_type" id="2000816477158"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002438442199"/>
			<UnexposedExpr type="int" spelling="color_type" id="2001810311052"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2002683328937"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2000583131932"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000214528212"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001418092239"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000776068828"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2002979783612"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2000338530726"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002047535355"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2001914431563"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2004032930555"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2001078932686"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002273512908"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002081419092"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000077274223"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2001783432156"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2002512651532"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000634716293"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2001959622229"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2001341772680"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2002389965384"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002984464693"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003296578692"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000894590583"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2002414722762"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2000713825144"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003365201879"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2001666112677"/>
			<StringLiteral type="char [31]" spelling="&quot;IHDR width(%lu) changed to %lu&quot;" id="2001887838211"/>
			<StringLiteral type="char [6]" spelling="&quot;width&quot;" id="2002389824883"/>
			<StringLiteral type="char [32]" spelling="&quot;IHDR height(%lu) changed to %lu&quot;" id="2001205448555"/>
			<StringLiteral type="char [7]" spelling="&quot;height&quot;" id="2001256448531"/>
			<StringLiteral type="char [35]" spelling="&quot;IHDR bit_depth(%lu) changed to %lu&quot;" id="2001590177634"/>
			<StringLiteral type="char [10]" spelling="&quot;bit_depth&quot;" id="2004143475983"/>
			<StringLiteral type="char [36]" spelling="&quot;IHDR color_type(%lu) changed to %lu&quot;" id="2000123163752"/>
			<StringLiteral type="char [11]" spelling="&quot;color_type&quot;" id="2003473641669"/>
			<StringLiteral type="char [42]" spelling="&quot;IHDR interlace_method(%lu) changed to %lu&quot;" id="2002585596147"/>
			<StringLiteral type="char [17]" spelling="&quot;interlace_method&quot;" id="2000328265242"/>
			<StringLiteral type="char [44]" spelling="&quot;IHDR compression_method(%lu) changed to %lu&quot;" id="2003839387966"/>
			<StringLiteral type="char [19]" spelling="&quot;compression_method&quot;" id="2000044468953"/>
			<StringLiteral type="char [39]" spelling="&quot;IHDR filter_method(%lu) changed to %lu&quot;" id="2001972662712"/>
			<StringLiteral type="char [14]" spelling="&quot;filter_method&quot;" id="2003909676213"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2000361423142"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002269671578"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003488146373"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002393420540"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2004045589010"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000628958773"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2004158465096"/>
			<DeclRefExpr type="const char *" spelling="e" id="2001184476394"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2000538137037"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004059367257"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2004164907503"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001833928649"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2003285106306"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001676165869"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2002519114183"/>
			<DeclRefExpr type="const char *" spelling="e" id="2002795506120"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2003227519607"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002351456744"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001619334515"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003122194807"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2000681009295"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001126122001"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000207138453"/>
			<DeclRefExpr type="const char *" spelling="e" id="2003898629656"/>
			<DeclRefExpr type="int" spelling="color_type" id="2000737171938"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000511697026"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003203204811"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002574987001"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2003379986005"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000270671338"/>
			<DeclRefExpr type="int" spelling="color_type" id="2003228108982"/>
			<DeclRefExpr type="const char *" spelling="e" id="2003921869919"/>
			<DeclRefExpr type="int" spelling="interlace_method" id="2000543625032"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001688744751"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000841771458"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001148384051"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2003762879452"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003060390186"/>
			<DeclRefExpr type="int" spelling="interlace_method" id="2001222376513"/>
			<DeclRefExpr type="const char *" spelling="e" id="2001759918775"/>
			<DeclRefExpr type="int" spelling="compression_method" id="2000718771167"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001881841904"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001988318329"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001687315251"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2003690380801"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003319721456"/>
			<DeclRefExpr type="int" spelling="compression_method" id="2002234195117"/>
			<DeclRefExpr type="const char *" spelling="e" id="2002091815312"/>
			<DeclRefExpr type="int" spelling="filter_method" id="2002392354155"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002813743283"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002749609452"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003232586836"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2000490020685"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000845407835"/>
			<DeclRefExpr type="int" spelling="filter_method" id="2001264878696"/>
			<DeclRefExpr type="const char *" spelling="e" id="2004243392694"/>
			<CallExpr type="void" spelling="display_log" id="2002045033602"/>
			<CallExpr type="void" spelling="display_log" id="2004284339245"/>
			<CallExpr type="void" spelling="display_log" id="2002129852763"/>
			<CallExpr type="void" spelling="display_log" id="2004194689616"/>
			<CallExpr type="void" spelling="display_log" id="2000037490718"/>
			<CallExpr type="void" spelling="display_log" id="2003289556778"/>
			<CallExpr type="void" spelling="display_log" id="2000090309390"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="'e' remains set to the name of the last thing changed:" comment_scope_start="1026" comment_scope_end="1029">
		<SYMBOLS>
			<UnexposedExpr type="const char *" spelling="e" id="2002290089533"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002029571903"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000745195360"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2002993338016"/>
			<UnexposedExpr type="const char *" spelling="e" id="2001784977085"/>
			<StringLiteral type="char [18]" spelling="&quot;IHDR changed (%s)&quot;" id="2003649139678"/>
			<DeclRefExpr type="const char *" spelling="e" id="2001963249446"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002723062320"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003142675094"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2000706353828"/>
			<DeclRefExpr type="const char *" spelling="e" id="2001608049294"/>
			<CallExpr type="void" spelling="display_log" id="2001213640937"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="All the chunks from the original PNG should be preserved in the output PNG
    * because the PNG format has not been changed." comment_scope_start="1030" comment_scope_end="1040">
		<SYMBOLS>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2002684429268"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2002654095623"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2002701330165"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2002488552732"/>
			<UnexposedExpr type="unsigned long" spelling="png_get_valid" id="2002554389470"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2002720071456"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2002396546806"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2002267466217"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003269733064"/>
			<UnexposedExpr type="const png_info *" spelling="read_ip" id="2001184914945"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2001969794222"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000216216907"/>
			<UnexposedExpr type="unsigned long" spelling="chunks" id="2003388484885"/>
			<UnexposedExpr type="unsigned long" spelling="chunks" id="2001697162731"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2001870423219"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002238948980"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2004250288386"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001533091658"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2002501160567"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2003321864969"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003924225260"/>
			<UnexposedExpr type="unsigned long" spelling="chunks" id="2003371664062"/>
			<StringLiteral type="char [39]" spelling="&quot;PNG chunks changed from 0x%lx to 0x%lx&quot;" id="2003368269006"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2003768344903"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000754534158"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002776814169"/>
			<DeclRefExpr type="unsigned long" spelling="chunks" id="2001131094824"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002875154514"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002665740220"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002037761292"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2001845935215"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002890850648"/>
			<DeclRefExpr type="unsigned long" spelling="chunks" id="2003981761515"/>
			<VarDecl type="unsigned long" spelling="chunks" id="2003111025417"/>
			<CallExpr type="png_uint_32" spelling="png_get_valid" id="2000161038269"/>
			<CallExpr type="void" spelling="display_log" id="2003048979666"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="rowbytes should be the same" comment_scope_start="1042" comment_scope_end="1044">
		<SYMBOLS>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2000010732287"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2000943373092"/>
			<UnexposedExpr type="size_t (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2001570458872"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2000185544828"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2001495443015"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002362464193"/>
			<UnexposedExpr type="const png_info *" spelling="read_ip" id="2002325163345"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2003078828140"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001286935255"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2000192039854"/>
			<DeclRefExpr type="size_t (png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2000325152643"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003435861662"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003035712469"/>
			<CallExpr type="size_t" spelling="png_get_rowbytes" id="2002880003673"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="NOTE: on 64-bit systems this may trash the top bits of rowbytes,
    * which could lead to weird error messages." comment_scope_start="1045" comment_scope_end="1051">
		<SYMBOLS>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2004071190196"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2002516627998"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2001540888227"/>
			<UnexposedExpr type="size_t" spelling="original_rowbytes" id="2000220205825"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002721506036"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002740552444"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000615806740"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2002005425252"/>
			<UnexposedExpr type="size_t" spelling="original_rowbytes" id="2001073607424"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002001358405"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2000099224440"/>
			<StringLiteral type="char [37]" spelling="&quot;PNG rowbytes changed from %lu to %lu&quot;" id="2004001539699"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2000145378677"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001716224107"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000836795756"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003843957787"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2003933956563"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001671363641"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2002122749464"/>
			<CallExpr type="void" spelling="display_log" id="2002276287240"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="top" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="The rows should be the same too, unless the applied transforms includes
    * the shift transform, in which case low bits may have been lost." comment_scope_start="1052" comment_scope_end="1271">
		<SYMBOLS>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2003554366998"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2002827627213"/>
			<MemberRefExpr type="int" spelling="active_transforms" id="2004209494072"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2004031888665"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2001532678133"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2002595716887"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2000913875457"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2000397793930"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2003227623470"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2001171748438"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2001928068366"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2003811828159"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2001100506882"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2002107514094"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2003181995987"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2004109479181"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2001205836090"/>
			<UnexposedExpr type="png_bytepp (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rows" id="2003757293075"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2003537920434"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2004083060590"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003693271777"/>
			<UnexposedExpr type="const png_info *" spelling="read_ip" id="2002115862201"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2001929677468"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003205434889"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002356523281"/>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2001232929804"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001287930354"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2000801035749"/>
			<UnexposedExpr type="png_bytepp" spelling="rows" id="2000736445419"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002607876713"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003378418425"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2003563195104"/>
			<UnexposedExpr type="int" spelling="applied_transforms" id="2001677912724"/>
			<UnexposedExpr type="int" spelling="active_transforms" id="2002820013635"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003354263350"/>
			<UnexposedExpr type="int" spelling="color_type" id="2001479212925"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2000782282981"/>
			<UnexposedExpr type="unsigned long" spelling="height" id="2001838407818"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2003934352370"/>
			<UnexposedExpr type="png_bytepp" spelling="rows" id="2000980119979"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2001776719117"/>
			<UnexposedExpr type="png_bytepp" spelling="original_rows" id="2003255928888"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002499122098"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2001872628877"/>
			<UnexposedExpr type="int (*)(const void *, const void *, unsigned long)" spelling="memcmp" id="2003378013684"/>
			<UnexposedExpr type="const void *" spelling="row" id="2002449664271"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2004252812937"/>
			<UnexposedExpr type="const void *" spelling="orig" id="2001373488540"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2002776861746"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2000225942996"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2000556767519"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2001960977217"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2001304083937"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2000403732238"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002625432088"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2003635375353"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2003389152807"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2000505540418"/>
			<UnexposedExpr type="size_t" spelling="x" id="2001269079963"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2000585058834"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2000345717102"/>
			<UnexposedExpr type="size_t" spelling="x" id="2002365712977"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2001383726300"/>
			<UnexposedExpr type="size_t" spelling="x" id="2000438496638"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002323199745"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003106005886"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2002308205960"/>
			<UnexposedExpr type="size_t" spelling="x" id="2002175831154"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2000735233189"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2001474734456"/>
			<UnexposedExpr type="size_t" spelling="x" id="2003122139841"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2001429553826"/>
			<UnexposedExpr type="size_t" spelling="x" id="2001827149107"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2002667236016"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2002586593935"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2003683172032"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000790410449"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002739459823"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002484092792"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000575217360"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000657266020"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2001661610571"/>
			<UnexposedExpr type="int" spelling="color_type" id="2003997433418"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002650478184"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2003080973818"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003198576860"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001126094352"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2004083302646"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2003133889264"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001481971021"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001749943316"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2001660013807"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001902292588"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002235201083"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001172121770"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2002457585642"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003130119852"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000624561917"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2002286384213"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2002202597453"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002572926550"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2002995991979"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003140842505"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000620643541"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002197104376"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2001948009261"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003179972088"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001033059184"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2003717675305"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2002150263367"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003324556477"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2000809212734"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2000541925624"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002985709531"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2003121194837"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003843118549"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001229896082"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002350716639"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004213408578"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_ERROR" id="2003498521818"/>
			<UnexposedExpr type="int" spelling="color_type" id="2000453475465"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2003820234347"/>
			<UnexposedExpr type="void *" spelling="sig_bits" id="2002687748733"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003410580819"/>
			<UnexposedExpr type="int" spelling="b" id="2001545237130"/>
			<UnexposedExpr type="int" spelling="bpp" id="2000903267975"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001446385376"/>
			<UnexposedExpr type="int" spelling="b" id="2000126723623"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001303645563"/>
			<UnexposedExpr type="int" spelling="b" id="2001727996843"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000105916655"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002491391395"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003676001570"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2000615950750"/>
			<UnexposedExpr type="int" spelling="b" id="2003538082048"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003534048812"/>
			<UnexposedExpr type="int" spelling="b" id="2000323344757"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000889710159"/>
			<UnexposedExpr type="int" spelling="bpp" id="2002289667117"/>
			<UnexposedExpr type="int" spelling="bpp" id="2002921721716"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003090822346"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002128941580"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003394589629"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2001797542785"/>
			<UnexposedExpr type="int" spelling="bpp" id="2003420690960"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003121566771"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000476258624"/>
			<UnexposedExpr type="int" spelling="bpp" id="2001020594184"/>
			<UnexposedExpr type="int" spelling="b" id="2003213037364"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003649528549"/>
			<UnexposedExpr type="int" spelling="b" id="2002664695772"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000482004182"/>
			<UnexposedExpr type="int" spelling="b" id="2001464121518"/>
			<UnexposedExpr type="unsigned int" spelling="sig" id="2004168971150"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000740386590"/>
			<UnexposedExpr type="int" spelling="b" id="2002287610070"/>
			<UnexposedExpr type="unsigned int" spelling="sig" id="2002983585007"/>
			<UnexposedExpr type="int" spelling="b" id="2004084277034"/>
			<UnexposedExpr type="int" spelling="bpp" id="2001559555848"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001768309228"/>
			<UnexposedExpr type="int" spelling="b" id="2001209566822"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001101492516"/>
			<UnexposedExpr type="int" spelling="b" id="2004149999728"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001187047967"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002354960897"/>
			<UnexposedExpr type="int" spelling="b" id="2003734751862"/>
			<UnexposedExpr type="int" spelling="b" id="2000473502177"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002717080953"/>
			<UnexposedExpr type="int" spelling="b" id="2004083876059"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2004182908922"/>
			<UnexposedExpr type="int" spelling="b" id="2000298110740"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001674317142"/>
			<UnexposedExpr type="int" spelling="b" id="2001775838982"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003817960575"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001731193232"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2001047370992"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002343664834"/>
			<UnexposedExpr type="int" spelling="bpp" id="2002533323484"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002657426598"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000833998963"/>
			<UnexposedExpr type="int" spelling="bpp" id="2004105514483"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002389783536"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003870246801"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003981661703"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2001002142504"/>
			<UnexposedExpr type="int" spelling="bpp" id="2000964630532"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002308256423"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2003533688917"/>
			<UnexposedExpr type="unsigned long" spelling="height" id="2002412658951"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2000463583920"/>
			<UnexposedExpr type="png_bytepp" spelling="rows" id="2001845853588"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2002857436227"/>
			<UnexposedExpr type="png_bytepp" spelling="original_rows" id="2003676956384"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000216620215"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2003809095681"/>
			<UnexposedExpr type="unsigned long" spelling="x" id="2004257190635"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2002855773720"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2000789280893"/>
			<UnexposedExpr type="int" spelling="b" id="2000262042122"/>
			<UnexposedExpr type="int" spelling="bpp" id="2001843906216"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002016863659"/>
			<UnexposedExpr type="int" spelling="b" id="2003283499090"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003155237220"/>
			<UnexposedExpr type="int" spelling="b" id="2000601420228"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003863789215"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001993677705"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2001006545822"/>
			<UnexposedExpr type="unsigned long" spelling="x" id="2004143034062"/>
			<UnexposedExpr type="int" spelling="b" id="2001281188498"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2004004158633"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2000497643696"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2003340219995"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002886022958"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2000130936361"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2000904573078"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2003624513385"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002371163475"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003744727041"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002379539139"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2002985358944"/>
			<UnexposedExpr type="unsigned long" spelling="x" id="2000854543465"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2000741836581"/>
			<StringLiteral type="char [27]" spelling="&quot;png_get_rows returned NULL&quot;" id="2003855695623"/>
			<StringLiteral type="char [39]" spelling="&quot;byte(%lu,%lu) changed 0x%.2x -&gt; 0x%.2x&quot;" id="2004274196996"/>
			<StringLiteral type="char [43]" spelling="&quot;active shift transform but no sBIT in file&quot;" id="2001028985394"/>
			<StringLiteral type="char [23]" spelling="&quot;invalid colour type %d&quot;" id="2001993358675"/>
			<StringLiteral type="char [57]" spelling="&quot;invalid sBIT[%u]  value %d returned for PNG bit depth %d&quot;" id="2003477930453"/>
			<StringLiteral type="char [32]" spelling="&quot;invalid bpp %u for bit_depth %u&quot;" id="2002443590742"/>
			<StringLiteral type="char [21]" spelling="&quot;invalid bit depth %d&quot;" id="2002264628731"/>
			<StringLiteral type="char [30]" spelling="&quot;mask calculation error %u, %u&quot;" id="2003237231891"/>
			<StringLiteral type="char [53]" spelling="&quot;significant bits at (%lu[%u],%lu) changed %.2x-&gt;%.2x&quot;" id="2004270041471"/>
			<StringLiteral type="char [43]" spelling="&quot;significant bits at (%lu[end],%lu) changed&quot;" id="2002337262036"/>
			<DeclRefExpr type="png_bytepp (png_const_structrp, png_const_inforp)" spelling="png_get_rows" id="2004029313320"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003585998610"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004222150446"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2002246836770"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2001070548137"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001750359071"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2000584828644"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003489803042"/>
			<DeclRefExpr type="png_bytepp" spelling="rows" id="2000447152929"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003583181285"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001043440715"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2004079747491"/>
			<DeclRefExpr type="int" spelling="applied_transforms" id="2001302414794"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003043806172"/>
			<DeclRefExpr type="int" spelling="color_type" id="2001081919299"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2000923081644"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2001547578709"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2002931653737"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2001253456403"/>
			<DeclRefExpr type="png_bytepp" spelling="rows" id="2002742968515"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2003679078144"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000234110701"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2002372978173"/>
			<DeclRefExpr type="int (const void *, const void *, unsigned long)" spelling="memcmp" id="2002170519470"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2003693060835"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2003042611386"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2001614248822"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003764502052"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2001501717413"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2003396074321"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2000153448395"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003002222757"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2001233425431"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2004264824563"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2004091518953"/>
			<DeclRefExpr type="size_t" spelling="x" id="2002584530750"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003600983945"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2003847263426"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003566908326"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2000383192083"/>
			<DeclRefExpr type="size_t" spelling="x" id="2001387449530"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2000158160902"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003117676880"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003684388978"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003271914411"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2003727349276"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003281358284"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2001693399618"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2002554377403"/>
			<DeclRefExpr type="size_t" spelling="x" id="2000951541565"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2001056070600"/>
			<DeclRefExpr type="size_t" spelling="x" id="2002721840939"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2001844824816"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003771155117"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000339821279"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000809551061"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001982146890"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000746956168"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2003344319758"/>
			<DeclRefExpr type="int" spelling="color_type" id="2002593445423"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002403173134"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2004003784936"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003284438561"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001144036124"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001653244413"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000317005204"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002509595291"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000781066794"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003750289179"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2003405865204"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002693262107"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000869514935"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001008521903"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000815011158"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003244715951"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000747056140"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003780097899"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000877006609"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003753824220"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000039308144"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003992509691"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2004135073594"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000029611364"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001889671109"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001475885978"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2002165341525"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002129225878"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2003285236716"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003334770786"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002064653915"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2003572623928"/>
			<DeclRefExpr type="int" spelling="color_type" id="2003066840318"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2003971253062"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000283272903"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001852721817"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003506165104"/>
			<DeclRefExpr type="int" spelling="b" id="2002081556828"/>
			<DeclRefExpr type="int" spelling="b" id="2002396800239"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001995904882"/>
			<DeclRefExpr type="int" spelling="b" id="2002262450961"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003983196820"/>
			<DeclRefExpr type="int" spelling="b" id="2000612514699"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000321495911"/>
			<DeclRefExpr type="int" spelling="b" id="2001518583061"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000084512806"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003472544758"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003422440863"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2004272607426"/>
			<DeclRefExpr type="int" spelling="b" id="2002787454570"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002912414253"/>
			<DeclRefExpr type="int" spelling="b" id="2000787949723"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000771372643"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000006830015"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001201334144"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001455865427"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002676090190"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001533051290"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2002829329549"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002113728387"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001176126638"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001585259394"/>
			<DeclRefExpr type="int" spelling="b" id="2001614285447"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001057764986"/>
			<DeclRefExpr type="int" spelling="b" id="2003172401597"/>
			<DeclRefExpr type="int" spelling="b" id="2003845932614"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003673201516"/>
			<DeclRefExpr type="int" spelling="b" id="2000884483452"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000228795183"/>
			<DeclRefExpr type="int" spelling="b" id="2001345364429"/>
			<DeclRefExpr type="unsigned int" spelling="sig" id="2000463020282"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001010311392"/>
			<DeclRefExpr type="int" spelling="b" id="2000540306943"/>
			<DeclRefExpr type="unsigned int" spelling="sig" id="2003592848820"/>
			<DeclRefExpr type="int" spelling="b" id="2002373194814"/>
			<DeclRefExpr type="int" spelling="b" id="2001897719905"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000005167487"/>
			<DeclRefExpr type="int" spelling="b" id="2002039327082"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002984126641"/>
			<DeclRefExpr type="int" spelling="b" id="2003542839013"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002041330816"/>
			<DeclRefExpr type="int" spelling="b" id="2004144449240"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002695160050"/>
			<DeclRefExpr type="int" spelling="b" id="2002966699599"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002004928347"/>
			<DeclRefExpr type="int" spelling="b" id="2000218519401"/>
			<DeclRefExpr type="int" spelling="b" id="2003556730398"/>
			<DeclRefExpr type="int" spelling="b" id="2001928270191"/>
			<DeclRefExpr type="int" spelling="b" id="2001576917504"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000198009284"/>
			<DeclRefExpr type="int" spelling="b" id="2000743791401"/>
			<DeclRefExpr type="int" spelling="b" id="2000130442917"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001863631818"/>
			<DeclRefExpr type="int" spelling="b" id="2002704297416"/>
			<DeclRefExpr type="int" spelling="b" id="2001369860222"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001094559024"/>
			<DeclRefExpr type="int" spelling="b" id="2001949558084"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000102513861"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004288184154"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2000662969136"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001308256883"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001366247908"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001176832976"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003650707136"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003147543680"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001833160490"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001482922991"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2000308125410"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000596273362"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001712884354"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2001855531258"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002336047943"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2000052961665"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2003075764144"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2000087844226"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2002252402699"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2003345381032"/>
			<DeclRefExpr type="png_bytepp" spelling="rows" id="2001254145440"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2000104966187"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000947209605"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2002558458357"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2000143221671"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2000953451735"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2000941722431"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003798017478"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2000046445978"/>
			<DeclRefExpr type="int" spelling="b" id="2003605949496"/>
			<DeclRefExpr type="int" spelling="b" id="2000996700209"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003553040874"/>
			<DeclRefExpr type="int" spelling="b" id="2001478551436"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2002052210115"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000351789549"/>
			<DeclRefExpr type="int" spelling="b" id="2004033563633"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2003113531117"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002810768608"/>
			<DeclRefExpr type="int" spelling="b" id="2003077146795"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001330895074"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003095509337"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2002303366496"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2004261393410"/>
			<DeclRefExpr type="int" spelling="b" id="2000545906759"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2000887812114"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2002761074879"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2001174848176"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2002082454821"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2001343253539"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003376374651"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2000271391141"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2001124553909"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002815601015"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002600350612"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2001460113983"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2003812496118"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2001960913532"/>
			<VarDecl type="png_bytepp" spelling="rows" id="2001261340388"/>
			<VarDecl type="unsigned int" spelling="mask" id="2000992795650"/>
			<VarDecl type="unsigned long" spelling="y" id="2002023427693"/>
			<VarDecl type="png_bytep" spelling="row" id="2000331952787"/>
			<VarDecl type="png_bytep" spelling="orig" id="2000836983814"/>
			<VarDecl type="size_t" spelling="x" id="2003327225935"/>
			<VarDecl type="unsigned long" spelling="y" id="2001504658324"/>
			<VarDecl type="int" spelling="bpp" id="2002030928213"/>
			<VarDecl type="png_byte [8]" spelling="sig_bits" id="2002911175016"/>
			<VarDecl type="png_color_8p" spelling="sBIT" id="2000771111395"/>
			<VarDecl type="int" spelling="b" id="2004006042073"/>
			<VarDecl type="int" spelling="b" id="2003420256231"/>
			<VarDecl type="unsigned int" spelling="sig" id="2001181238690"/>
			<VarDecl type="png_bytep" spelling="row" id="2003573448719"/>
			<VarDecl type="png_bytep" spelling="orig" id="2004118018252"/>
			<VarDecl type="unsigned long" spelling="x" id="2003033856930"/>
			<VarDecl type="int" spelling="b" id="2003901046708"/>
			<CallExpr type="png_bytepp" spelling="png_get_rows" id="2001226886704"/>
			<CallExpr type="void" spelling="display_log" id="2000898815398"/>
			<CallExpr type="int" spelling="memcmp" id="2003255546753"/>
			<CallExpr type="void" spelling="display_log" id="2001203626892"/>
			<CallExpr type="png_uint_32" spelling="png_get_sBIT" id="2000764984073"/>
			<CallExpr type="void" spelling="display_log" id="2001937481833"/>
			<CallExpr type="void" spelling="display_log" id="2002266283034"/>
			<CallExpr type="void *" spelling="memset" id="2001085721362"/>
			<CallExpr type="void" spelling="display_log" id="2000624034765"/>
			<CallExpr type="void" spelling="display_log" id="2001150420956"/>
			<CallExpr type="void" spelling="display_log" id="2002250042290"/>
			<CallExpr type="void" spelling="display_log" id="2002854413176"/>
			<CallExpr type="void" spelling="display_log" id="2002301803700"/>
			<CallExpr type="void" spelling="display_log" id="2001543377963"/>
			<TypeRef type="png_bytepp" spelling="png_bytepp" id="2000038617223"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2004093084316"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2004093084316"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_color_8p" spelling="png_color_8p" id="2001370917108"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2004093084316"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2004093084316"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="includes" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="mask (if not zero) for the final byte" comment_scope_start="1057" comment_scope_end="1057">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="mask" id="2000992795650"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="final" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Need the stray bits at the end, this depends only on the low bits
          * of the image width; overflow does not matter.  If the width is an
          * exact multiple of 8 bits this gives a mask of 0, not 0xff." comment_scope_start="1061" comment_scope_end="1066">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2001232929804"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001287930354"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2000801035749"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2001070548137"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001750359071"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2000584828644"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Find the first error" comment_scope_start="1090" comment_scope_end="1097">
		<SYMBOLS>
			<UnexposedExpr type="size_t" spelling="x" id="2001269079963"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2000585058834"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2000345717102"/>
			<UnexposedExpr type="size_t" spelling="x" id="2002365712977"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2001383726300"/>
			<UnexposedExpr type="size_t" spelling="x" id="2000438496638"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002323199745"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003106005886"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2002308205960"/>
			<UnexposedExpr type="size_t" spelling="x" id="2002175831154"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2000735233189"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2001474734456"/>
			<UnexposedExpr type="size_t" spelling="x" id="2003122139841"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2001429553826"/>
			<UnexposedExpr type="size_t" spelling="x" id="2001827149107"/>
			<StringLiteral type="char [39]" spelling="&quot;byte(%lu,%lu) changed 0x%.2x -&gt; 0x%.2x&quot;" id="2004274196996"/>
			<DeclRefExpr type="size_t" spelling="x" id="2002584530750"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003600983945"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2003847263426"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003566908326"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2000383192083"/>
			<DeclRefExpr type="size_t" spelling="x" id="2001387449530"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2000158160902"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003117676880"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003684388978"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003271914411"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2003727349276"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003281358284"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2001693399618"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2002554377403"/>
			<DeclRefExpr type="size_t" spelling="x" id="2000951541565"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2001056070600"/>
			<DeclRefExpr type="size_t" spelling="x" id="2002721840939"/>
			<CallExpr type="void" spelling="display_log" id="2001203626892"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="don't keep reporting failed rows on 'continue'" comment_scope_start="1098" comment_scope_end="1098"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="bits-per-pixel then bytes-per-pixel" comment_scope_start="1107" comment_scope_end="1107">
		<SYMBOLS>
			<VarDecl type="int" spelling="bpp" id="2002030928213"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="components are up to 8 bytes in size" comment_scope_start="1108" comment_scope_end="1146">
		<SYMBOLS>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2001532678133"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2002595716887"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2000913875457"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2000397793930"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2003227623470"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2001171748438"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2001928068366"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2003811828159"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2001100506882"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2002107514094"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2003181995987"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2004109479181"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2002667236016"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2002586593935"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2003683172032"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000790410449"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002739459823"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002484092792"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000575217360"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000657266020"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2001661610571"/>
			<UnexposedExpr type="int" spelling="color_type" id="2003997433418"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002650478184"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2003080973818"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003198576860"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001126094352"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2004083302646"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2003133889264"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001481971021"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001749943316"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2001660013807"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001902292588"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002235201083"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001172121770"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2002457585642"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003130119852"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000624561917"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2002286384213"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2002202597453"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002572926550"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2002995991979"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003140842505"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000620643541"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002197104376"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2001948009261"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003179972088"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001033059184"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2003717675305"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2002150263367"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003324556477"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2000809212734"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2000541925624"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002985709531"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2003121194837"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003843118549"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001229896082"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002350716639"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004213408578"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_ERROR" id="2003498521818"/>
			<UnexposedExpr type="int" spelling="color_type" id="2000453475465"/>
			<StringLiteral type="char [43]" spelling="&quot;active shift transform but no sBIT in file&quot;" id="2001028985394"/>
			<StringLiteral type="char [23]" spelling="&quot;invalid colour type %d&quot;" id="2001993358675"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2001844824816"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003771155117"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000339821279"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000809551061"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001982146890"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000746956168"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2003344319758"/>
			<DeclRefExpr type="int" spelling="color_type" id="2002593445423"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002403173134"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2004003784936"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003284438561"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001144036124"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001653244413"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000317005204"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002509595291"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000781066794"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003750289179"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2003405865204"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002693262107"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000869514935"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001008521903"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000815011158"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003244715951"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000747056140"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003780097899"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000877006609"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003753824220"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000039308144"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003992509691"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2004135073594"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000029611364"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001889671109"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001475885978"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2002165341525"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002129225878"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2003285236716"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003334770786"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002064653915"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2003572623928"/>
			<DeclRefExpr type="int" spelling="color_type" id="2003066840318"/>
			<VarDecl type="png_byte [8]" spelling="sig_bits" id="2002911175016"/>
			<VarDecl type="png_color_8p" spelling="sBIT" id="2000771111395"/>
			<CallExpr type="png_uint_32" spelling="png_get_sBIT" id="2000764984073"/>
			<CallExpr type="void" spelling="display_log" id="2001937481833"/>
			<CallExpr type="void" spelling="display_log" id="2002266283034"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
			<TypeRef type="png_color_8p" spelling="png_color_8p" id="2001370917108"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="NOTREACHED" comment_scope_start="1147" comment_scope_end="1151">
		<SYMBOLS>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2003820234347"/>
			<UnexposedExpr type="void *" spelling="sig_bits" id="2002687748733"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003410580819"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2003971253062"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000283272903"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001852721817"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003506165104"/>
			<CallExpr type="void *" spelling="memset" id="2001085721362"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="libpng should catch this; if not there is a security issue
                * because an app (like this one) may overflow an array. In fact
                * libpng doesn't catch this at present." comment_scope_start="1158" comment_scope_end="1161"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="!palette" comment_scope_start="1162" comment_scope_end="1162">
		<SYMBOLS>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001446385376"/>
			<UnexposedExpr type="int" spelling="b" id="2000126723623"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001303645563"/>
			<UnexposedExpr type="int" spelling="b" id="2001727996843"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000105916655"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003983196820"/>
			<DeclRefExpr type="int" spelling="b" id="2000612514699"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000321495911"/>
			<DeclRefExpr type="int" spelling="b" id="2001518583061"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000084512806"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="sanity check; this is a grayscale PNG; something is wrong in the
             * code above." comment_scope_start="1171" comment_scope_end="1176">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002128941580"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003394589629"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2001797542785"/>
			<UnexposedExpr type="int" spelling="bpp" id="2003420690960"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003121566771"/>
			<StringLiteral type="char [32]" spelling="&quot;invalid bpp %u for bit_depth %u&quot;" id="2002443590742"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002676090190"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001533051290"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2002829329549"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002113728387"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001176126638"/>
			<CallExpr type="void" spelling="display_log" id="2001150420956"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Two bytes per component, big-endian" comment_scope_start="1182" comment_scope_end="1182"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="big-endian" comment_scope_start="1188" comment_scope_end="1188">
		<SYMBOLS>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000740386590"/>
			<UnexposedExpr type="int" spelling="b" id="2002287610070"/>
			<UnexposedExpr type="unsigned int" spelling="sig" id="2002983585007"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001010311392"/>
			<DeclRefExpr type="int" spelling="b" id="2000540306943"/>
			<DeclRefExpr type="unsigned int" spelling="sig" id="2003592848820"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="One byte per component" comment_scope_start="1192" comment_scope_end="1192"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="allowed, but dumb" comment_scope_start="1197" comment_scope_end="1197"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Value is 1" comment_scope_start="1198" comment_scope_end="1201">
		<SYMBOLS>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001187047967"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002695160050"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Replicate 4 times" comment_scope_start="1202" comment_scope_end="1202"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Value is 1 or 2" comment_scope_start="1203" comment_scope_end="1209">
		<SYMBOLS>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002354960897"/>
			<UnexposedExpr type="int" spelling="b" id="2003734751862"/>
			<UnexposedExpr type="int" spelling="b" id="2000473502177"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002717080953"/>
			<UnexposedExpr type="int" spelling="b" id="2004083876059"/>
			<DeclRefExpr type="int" spelling="b" id="2002966699599"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002004928347"/>
			<DeclRefExpr type="int" spelling="b" id="2000218519401"/>
			<DeclRefExpr type="int" spelling="b" id="2003556730398"/>
			<DeclRefExpr type="int" spelling="b" id="2001928270191"/>
			<DeclRefExpr type="int" spelling="b" id="2001576917504"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000198009284"/>
			<DeclRefExpr type="int" spelling="b" id="2000743791401"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Replicate twice" comment_scope_start="1210" comment_scope_end="1210"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Value is 1, 2, 3 or 4" comment_scope_start="1211" comment_scope_end="1220">
		<SYMBOLS>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2004182908922"/>
			<UnexposedExpr type="int" spelling="b" id="2000298110740"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001674317142"/>
			<UnexposedExpr type="int" spelling="b" id="2001775838982"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003817960575"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001731193232"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2001047370992"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002343664834"/>
			<StringLiteral type="char [21]" spelling="&quot;invalid bit depth %d&quot;" id="2002264628731"/>
			<DeclRefExpr type="int" spelling="b" id="2000130442917"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001863631818"/>
			<DeclRefExpr type="int" spelling="b" id="2002704297416"/>
			<DeclRefExpr type="int" spelling="b" id="2001369860222"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001094559024"/>
			<DeclRefExpr type="int" spelling="b" id="2001949558084"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000102513861"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004288184154"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2000662969136"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001308256883"/>
			<CallExpr type="void" spelling="display_log" id="2002250042290"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003342702265"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Convert bpp to bytes; this gives '1' for low-bit depth grayscale,
          * where there are multiple pixels per byte." comment_scope_start="1222" comment_scope_end="1226">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="bpp" id="2002533323484"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001366247908"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001176832976"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="grayscale"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="The mask can be combined with sig_bits[0]" comment_scope_start="1227" comment_scope_end="1235">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002657426598"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000833998963"/>
			<UnexposedExpr type="int" spelling="bpp" id="2004105514483"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002389783536"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003870246801"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003981661703"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2001002142504"/>
			<UnexposedExpr type="int" spelling="bpp" id="2000964630532"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002308256423"/>
			<StringLiteral type="char [30]" spelling="&quot;mask calculation error %u, %u&quot;" id="2003237231891"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003650707136"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003147543680"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001833160490"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001482922991"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2000308125410"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000596273362"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001712884354"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2001855531258"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002336047943"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2000052961665"/>
			<CallExpr type="void" spelling="display_log" id="2002854413176"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="for y" comment_scope_start="1265" comment_scope_end="1265"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="!sBIT" comment_scope_start="1267" comment_scope_end="1267"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="!sBIT" comment_scope_start="1270" comment_scope_end="1270"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="compare succeeded" comment_scope_start="1273" comment_scope_end="1273"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Generic write function used both from the write callback provided to
    * libpng and from the generic read code." comment_scope_start="1280" comment_scope_end="1320">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2000622534992"/>
			<MemberRefExpr type="size_t" spelling="end_count" id="2000861288979"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2003884192894"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2003768835290"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2000833409474"/>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2000720545606"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2002862281234"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2003168854190"/>
			<MemberRefExpr type="size_t" spelling="end_count" id="2000057695341"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001231872221"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2000700893692"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2001597601523"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2002286547733"/>
			<UnexposedExpr type="size_t" spelling="size" id="2002316761474"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2002083227475"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2000146291598"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2003704852825"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001537905900"/>
			<UnexposedExpr type="struct buffer_list *(*)(struct buffer_list *)" spelling="buffer_extend" id="2001307903470"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2000049920168"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002244990700"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002030084366"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001388821054"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2000097210493"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2002412632890"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2003810824519"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2001867311250"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001215787008"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2000887314415"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2001681511162"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2004168915674"/>
			<UnexposedExpr type="size_t" spelling="size" id="2003614063738"/>
			<UnexposedExpr type="size_t" spelling="size" id="2002053925363"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2001770213848"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2004258332668"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001029445226"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2004119831634"/>
			<UnexposedExpr type="const void *" spelling="data" id="2002183185226"/>
			<UnexposedExpr type="png_bytep" spelling="data" id="2001034460074"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2002594016080"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2002946764947"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2001596601249"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2001996406807"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2004178531454"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2000889132304"/>
			<StringLiteral type="char [26]" spelling="&quot;out of memory saving file&quot;" id="2001110929812"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2004238886515"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2000641372912"/>
			<DeclRefExpr type="size_t" spelling="size" id="2003906003193"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2001350231685"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001339849480"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000123818200"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002996975579"/>
			<DeclRefExpr type="struct buffer_list *(struct buffer_list *)" spelling="buffer_extend" id="2001654478895"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000575194653"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001529332571"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000804319096"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003244127067"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2000131148764"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000828959435"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002577603388"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2003225690431"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001729867044"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2003540376507"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2000691410075"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2003340989333"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2000533122260"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2000983849823"/>
			<DeclRefExpr type="size_t" spelling="size" id="2003290243252"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2000757582640"/>
			<DeclRefExpr type="size_t" spelling="size" id="2000684032344"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2000613102195"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002911331069"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2000015658972"/>
			<DeclRefExpr type="png_bytep" spelling="data" id="2004098412629"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2000316046625"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2001373133052"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2002348430927"/>
			<DeclRefExpr type="size_t" spelling="size" id="2000428939344"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2000462142030"/>
			<DeclRefExpr type="png_bytep" spelling="data" id="2002107192846"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2001022805819"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2003650806557"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2000603691122"/>
			<VarDecl type="struct buffer_list *" spelling="last" id="2001593783128"/>
			<VarDecl type="size_t" spelling="end_count" id="2001028214219"/>
			<VarDecl type="size_t" spelling="avail" id="2001614837451"/>
			<FunctionDecl type="void (struct display *, struct buffer *, png_bytep, size_t)" spelling="buffer_write" id="2002314314944"/>
			<CallExpr type="struct buffer_list *" spelling="buffer_extend" id="2001525994147"/>
			<CallExpr type="void" spelling="display_log" id="2001469083229"/>
			<CallExpr type="void *" spelling="memcpy" id="2004070090535"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2001071003950"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Write the data into the buffer, adding buffers as required" comment_scope_start="1284" comment_scope_end="1304">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2000622534992"/>
			<MemberRefExpr type="size_t" spelling="end_count" id="2000861288979"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2003884192894"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2003768835290"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2000833409474"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001231872221"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2000700893692"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2001597601523"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2002286547733"/>
			<UnexposedExpr type="size_t" spelling="size" id="2002316761474"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2002083227475"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2000146291598"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2003704852825"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001537905900"/>
			<UnexposedExpr type="struct buffer_list *(*)(struct buffer_list *)" spelling="buffer_extend" id="2001307903470"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2000049920168"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002244990700"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002030084366"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001388821054"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2000097210493"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2002412632890"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2003810824519"/>
			<StringLiteral type="char [26]" spelling="&quot;out of memory saving file&quot;" id="2001110929812"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2004238886515"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2000641372912"/>
			<DeclRefExpr type="size_t" spelling="size" id="2003906003193"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2001350231685"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001339849480"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000123818200"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002996975579"/>
			<DeclRefExpr type="struct buffer_list *(struct buffer_list *)" spelling="buffer_extend" id="2001654478895"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000575194653"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001529332571"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000804319096"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003244127067"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2000131148764"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000828959435"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002577603388"/>
			<VarDecl type="struct buffer_list *" spelling="last" id="2001593783128"/>
			<VarDecl type="size_t" spelling="end_count" id="2001028214219"/>
			<VarDecl type="size_t" spelling="avail" id="2001614837451"/>
			<CallExpr type="struct buffer_list *" spelling="buffer_extend" id="2001525994147"/>
			<CallExpr type="void" spelling="display_log" id="2001469083229"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2001071003950"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
			<TypeRef type="size_t" spelling="size_t" id="2001577583120"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="adding" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="avoid the need to rewrite every time" comment_scope_start="1305" comment_scope_end="1305">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2000720545606"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2001867311250"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001215787008"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2003225690431"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001729867044"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="safety" comment_scope_start="1331" comment_scope_end="1331">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_clean_write" id="2001552515362"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001632178742"/>
			<DeclRefExpr type="void (struct display *)" spelling="display_clean_write" id="2001623487536"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002405503539"/>
			<CallExpr type="void" spelling="display_clean_write" id="2002753860715"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="flush" comment_scope_start="1344" comment_scope_end="1344">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_write_fn" id="2002979161464"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Remove the user limits, if any" comment_scope_start="1347" comment_scope_end="1350">
		<SYMBOLS>
			<MemberRefExpr type="png_structp" spelling="write_pp" id="2003421217295"/>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2002862336989"/>
			<UnexposedExpr type="png_structp" spelling="write_pp" id="2004034071671"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003694358811"/>
			<DeclRefExpr type="void (png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2002748367300"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002732727925"/>
			<CallExpr type="void" spelling="png_set_user_limits" id="2002826373661"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Certain transforms require the png_info to be zapped to allow the
    * transform to work correctly." comment_scope_start="1351" comment_scope_end="1367">
		<SYMBOLS>
			<MemberRefExpr type="int" spelling="color_type" id="2003636236620"/>
			<MemberRefExpr type="png_structp" spelling="write_pp" id="2003880738195"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2003952273583"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2000711605565"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2001535561205"/>
			<MemberRefExpr type="int" spelling="interlace_method" id="2002194221233"/>
			<MemberRefExpr type="int" spelling="compression_method" id="2002347778390"/>
			<MemberRefExpr type="int" spelling="filter_method" id="2002785043225"/>
			<UnexposedExpr type="int" spelling="transforms" id="2000591669316"/>
			<UnexposedExpr type="int" spelling="color_type" id="2003577465448"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004284339833"/>
			<UnexposedExpr type="int" spelling="transforms" id="2001667877669"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)" spelling="png_set_IHDR" id="2002101755410"/>
			<UnexposedExpr type="const png_struct *" spelling="write_pp" id="2002982873238"/>
			<UnexposedExpr type="png_structp" spelling="write_pp" id="2002020158174"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003137843423"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2000417787293"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2000139204312"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004140576741"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2001727408249"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001536857005"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002149176104"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002062277119"/>
			<UnexposedExpr type="int" spelling="ct" id="2002650058202"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2002414952286"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002237436083"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2002252462877"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003659750932"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2003247807721"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004228372016"/>
			<DeclRefExpr type="int" spelling="transforms" id="2004198840052"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000984561126"/>
			<DeclRefExpr type="int" spelling="transforms" id="2003618778015"/>
			<DeclRefExpr type="int" spelling="ct" id="2004094534881"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)" spelling="png_set_IHDR" id="2003250840613"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001396122156"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2000600170488"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003228441890"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002549337393"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004247555421"/>
			<DeclRefExpr type="int" spelling="ct" id="2000787207305"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000922135821"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000620338056"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003908073356"/>
			<VarDecl type="int" spelling="ct" id="2002995074301"/>
			<CallExpr type="void" spelling="png_set_IHDR" id="2000279901825"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="params" comment_scope_start="1368" comment_scope_end="1368">
		<SYMBOLS>
			<MemberRefExpr type="png_structp" spelling="write_pp" id="2002001424780"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp, int, png_voidp)" spelling="png_write_png" id="2000708069551"/>
			<UnexposedExpr type="png_structp" spelling="write_pp" id="2002009161713"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000767908533"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2001052792383"/>
			<UnexposedExpr type="int" spelling="transforms" id="2001562966411"/>
			<DeclRefExpr type="void (png_structrp, png_inforp, int, png_voidp)" spelling="png_write_png" id="2000235778447"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002274562269"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2001214752941"/>
			<DeclRefExpr type="int" spelling="transforms" id="2000415106084"/>
			<CallExpr type="void" spelling="png_write_png" id="2001121524790"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Clean it on the way out - if control returns to the caller then the
    * written_file contains the required data." comment_scope_start="1370" comment_scope_end="1374">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_clean_write" id="2003378670380"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003980427024"/>
			<DeclRefExpr type="void (struct display *)" spelling="display_clean_write" id="2002218877690"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004143568207"/>
			<FunctionDecl type="void (struct display *, png_infop, int)" spelling="write_png" id="2001286109158"/>
			<CallExpr type="void" spelling="display_clean_write" id="2002668240084"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="WRITE_PNG" comment_scope_start="1375" comment_scope_end="1375"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Helper to test for a bad combo and log it if it is skipped" comment_scope_start="1379" comment_scope_end="1411">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002052902370"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003870781416"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2001538893910"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2000961042782"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001378047453"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001743265230"/>
			<UnexposedExpr type="int (*)(int)" spelling="is_bad_combo" id="2004072665294"/>
			<UnexposedExpr type="int" spelling="tr" id="2000094286324"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000556884833"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003512067710"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2000430612960"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2000512162036"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002449951066"/>
			<UnexposedExpr type="int" spelling="tr" id="2000143414102"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2003904012837"/>
			<UnexposedExpr type="int" spelling="tr" id="2000016742080"/>
			<UnexposedExpr type="int" spelling="next" id="2002405833989"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2003118173015"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="transform_name" id="2003352843112"/>
			<UnexposedExpr type="int" spelling="next" id="2001280312820"/>
			<UnexposedExpr type="int" spelling="tr" id="2003206105214"/>
			<UnexposedExpr type="int (*)(int)" spelling="putchar" id="2003651425492"/>
			<UnexposedExpr type="int (*)(int)" spelling="putchar" id="2001108919327"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003960732877"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003987679163"/>
			<UnexposedExpr type="error_level" spelling="INFORMATION" id="2000141119753"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2001400844170"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003902326512"/>
			<UnexposedExpr type="int" spelling="tr" id="2002872972594"/>
			<StringLiteral type="char [21]" spelling="&quot;SKIP: %s transforms &quot;" id="2002166492789"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2001637766573"/>
			<StringLiteral type="char [33]" spelling="&quot;%s: skipped known bad combo 0x%x&quot;" id="2003058171572"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000195272834"/>
			<DeclRefExpr type="int (int)" spelling="is_bad_combo" id="2002591861785"/>
			<DeclRefExpr type="int" spelling="tr" id="2003739215045"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002833870727"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2001344190552"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002502721571"/>
			<DeclRefExpr type="int" spelling="tr" id="2002946682146"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2001967863264"/>
			<DeclRefExpr type="int" spelling="tr" id="2004024559225"/>
			<DeclRefExpr type="int" spelling="tr" id="2000351075711"/>
			<DeclRefExpr type="int" spelling="next" id="2001788472685"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2001547952128"/>
			<DeclRefExpr type="const char *(int)" spelling="transform_name" id="2000458049745"/>
			<DeclRefExpr type="int" spelling="next" id="2000294383436"/>
			<DeclRefExpr type="int" spelling="tr" id="2000859350496"/>
			<DeclRefExpr type="int (int)" spelling="putchar" id="2002985444392"/>
			<DeclRefExpr type="int (int)" spelling="putchar" id="2002650187501"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000636960916"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004116543002"/>
			<DeclRefExpr type="int" spelling="INFORMATION" id="2002245830670"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002944069245"/>
			<DeclRefExpr type="int" spelling="tr" id="2000319217849"/>
			<VarDecl type="int" spelling="next" id="2003363189708"/>
			<FunctionDecl type="int (struct display *, int)" spelling="skip_transform" id="2001320569215"/>
			<CallExpr type="int" spelling="is_bad_combo" id="2000447514999"/>
			<CallExpr type="int" spelling="printf" id="2002755514514"/>
			<CallExpr type="int" spelling="first_transform" id="2002162831402"/>
			<CallExpr type="int" spelling="printf" id="2001375795956"/>
			<CallExpr type="const char *" spelling="transform_name" id="2001027815755"/>
			<CallExpr type="int" spelling="putchar" id="2000122882236"/>
			<CallExpr type="int" spelling="putchar" id="2000932236194"/>
			<CallExpr type="void" spelling="display_log" id="2000579715449"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Log this to stdout if logging is on, otherwise just do an information
       * display_log." comment_scope_start="1383" comment_scope_end="1401">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003870781416"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2001538893910"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000556884833"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003512067710"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2000430612960"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2000512162036"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002449951066"/>
			<UnexposedExpr type="int" spelling="tr" id="2000143414102"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2003904012837"/>
			<UnexposedExpr type="int" spelling="tr" id="2000016742080"/>
			<UnexposedExpr type="int" spelling="next" id="2002405833989"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2003118173015"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="transform_name" id="2003352843112"/>
			<UnexposedExpr type="int" spelling="next" id="2001280312820"/>
			<UnexposedExpr type="int" spelling="tr" id="2003206105214"/>
			<UnexposedExpr type="int (*)(int)" spelling="putchar" id="2003651425492"/>
			<UnexposedExpr type="int (*)(int)" spelling="putchar" id="2001108919327"/>
			<StringLiteral type="char [21]" spelling="&quot;SKIP: %s transforms &quot;" id="2002166492789"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2001637766573"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002833870727"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2001344190552"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002502721571"/>
			<DeclRefExpr type="int" spelling="tr" id="2002946682146"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2001967863264"/>
			<DeclRefExpr type="int" spelling="tr" id="2004024559225"/>
			<DeclRefExpr type="int" spelling="tr" id="2000351075711"/>
			<DeclRefExpr type="int" spelling="next" id="2001788472685"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2001547952128"/>
			<DeclRefExpr type="const char *(int)" spelling="transform_name" id="2000458049745"/>
			<DeclRefExpr type="int" spelling="next" id="2000294383436"/>
			<DeclRefExpr type="int" spelling="tr" id="2000859350496"/>
			<DeclRefExpr type="int (int)" spelling="putchar" id="2002985444392"/>
			<DeclRefExpr type="int (int)" spelling="putchar" id="2002650187501"/>
			<VarDecl type="int" spelling="next" id="2003363189708"/>
			<CallExpr type="int" spelling="printf" id="2002755514514"/>
			<CallExpr type="int" spelling="first_transform" id="2002162831402"/>
			<CallExpr type="int" spelling="printf" id="2001375795956"/>
			<CallExpr type="const char *" spelling="transform_name" id="2001027815755"/>
			<CallExpr type="int" spelling="putchar" id="2000122882236"/>
			<CallExpr type="int" spelling="putchar" id="2000932236194"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="skip" comment_scope_start="1407" comment_scope_end="1407"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="don't skip" comment_scope_start="1410" comment_scope_end="1410"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="First cache the file and update the display original file
    * information for the new file." comment_scope_start="1416" comment_scope_end="1423">
		<SYMBOLS>
			<MemberRefExpr type="const char *" spelling="operation" id="2001708148437"/>
			<MemberRefExpr type="int" spelling="transforms" id="2001875002635"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001088322495"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004134941750"/>
			<UnexposedExpr type="void (*)(struct display *, const char *)" spelling="display_cache_file" id="2004095187767"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002609488781"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2002954317420"/>
			<UnexposedExpr type="void (*)(struct display *)" spelling="update_display" id="2003211967214"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002640886151"/>
			<StringLiteral type="char [11]" spelling="&quot;cache file&quot;" id="2002832354717"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003093392021"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001806279246"/>
			<DeclRefExpr type="void (struct display *, const char *)" spelling="display_cache_file" id="2003588097779"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002340365851"/>
			<DeclRefExpr type="const char *" spelling="filename" id="2001041214997"/>
			<DeclRefExpr type="void (struct display *)" spelling="update_display" id="2000714444275"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004256903507"/>
			<CallExpr type="void" spelling="display_cache_file" id="2003140306981"/>
			<CallExpr type="void" spelling="update_display" id="2000967629175"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="First test: if there are options that should be ignored for this file
    * verify that they really are ignored." comment_scope_start="1424" comment_scope_end="1435">
		<SYMBOLS>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2003026055317"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2002012694864"/>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2001277947996"/>
			<UnexposedExpr type="int" spelling="ignored_transforms" id="2002445997014"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001036868574"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2000694107881"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002890515656"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003592851495"/>
			<UnexposedExpr type="int" spelling="ignored_transforms" id="2000353603728"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001322602149"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2002139440970"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004140264357"/>
			<StringLiteral type="char [19]" spelling="&quot;ignored transforms&quot;" id="2000070608861"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002716898779"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2003381049622"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003556216690"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001931303828"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000367643856"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2002520664034"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000263746050"/>
			<CallExpr type="void" spelling="read_png" id="2003427145191"/>
			<CallExpr type="int" spelling="compare_read" id="2001139138534"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="The result should be identical to the original_rows" comment_scope_start="1432" comment_scope_end="1432"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms applied" comment_scope_start="1433" comment_scope_end="1433">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2002139440970"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004140264357"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2002520664034"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000263746050"/>
			<CallExpr type="int" spelling="compare_read" id="2001139138534"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="no point testing more" comment_scope_start="1434" comment_scope_end="1434"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Second test: write the original PNG data out to a new file (to test the
    * write side) then read the result back in and make sure that it hasn't
    * changed." comment_scope_start="1438" comment_scope_end="1442">
		<SYMBOLS>
			<MemberRefExpr type="const char *" spelling="operation" id="2004083056168"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002142566427"/>
			<StringLiteral type="char [6]" spelling="&quot;write&quot;" id="2000575502118"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003707364232"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="second" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms" comment_scope_start="1443" comment_scope_end="1443">
		<SYMBOLS>
			<MemberRefExpr type="png_infop" spelling="original_ip" id="2000999086134"/>
			<UnexposedExpr type="void (*)(struct display *, png_infop, int)" spelling="write_png" id="2004017935745"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001845988838"/>
			<UnexposedExpr type="png_infop" spelling="original_ip" id="2001872623554"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003587201867"/>
			<DeclRefExpr type="void (struct display *, png_infop, int)" spelling="write_png" id="2000062841743"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003081165157"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003196089051"/>
			<CallExpr type="void" spelling="write_png" id="2003553058060"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms" comment_scope_start="1444" comment_scope_end="1444">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2002789640854"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2000265727273"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003560234800"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001471242245"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2004170134947"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002412589674"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002607600422"/>
			<CallExpr type="void" spelling="read_png" id="2001515825352"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms applied" comment_scope_start="1445" comment_scope_end="1445">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2002348131678"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001200344630"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2002728617501"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000228239708"/>
			<CallExpr type="int" spelling="compare_read" id="2003159578396"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Third test: the active options.  Test each in turn, or, with the
    * EXHAUSTIVE option, test all possible combinations." comment_scope_start="1449" comment_scope_end="1562">
		<SYMBOLS>
			<MemberRefExpr type="int" spelling="active_transforms" id="2003209589273"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001367912020"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2003682521606"/>
			<MemberRefExpr type="const char *" spelling="operation" id="2002801981436"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2002100783060"/>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2001973110528"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002629702955"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2004065259725"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2003012637096"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002005650157"/>
			<UnexposedExpr type="unsigned int" spelling="active_transforms" id="2003301815359"/>
			<UnexposedExpr type="int" spelling="active_transforms" id="2003042426656"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001751947855"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000184687157"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003557699908"/>
			<UnexposedExpr type="unsigned int" spelling="first_transform" id="2001015873932"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2003654916907"/>
			<UnexposedExpr type="int" spelling="active" id="2000514668455"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2000064891343"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002139592018"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000708802757"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002770353616"/>
			<UnexposedExpr type="int" spelling="current" id="2001815365184"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2000123558347"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002160297119"/>
			<UnexposedExpr type="unsigned int" spelling="write_transforms" id="2004060781666"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003733065554"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003256496985"/>
			<UnexposedExpr type="void (*)(struct display *, png_infop, int)" spelling="write_png" id="2001985099471"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001827916692"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002941496970"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004199447589"/>
			<UnexposedExpr type="int" spelling="current" id="2003027301720"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002214534482"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002505625587"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002594545802"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003510843747"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2001210215303"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000629696494"/>
			<UnexposedExpr type="int" spelling="current" id="2002682445239"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003459176252"/>
			<UnexposedExpr type="int (*)(int)" spelling="is_combo" id="2002421117791"/>
			<UnexposedExpr type="int" spelling="current" id="2000595730950"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2001909088739"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2004258782992"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002318227774"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003270339763"/>
			<UnexposedExpr type="int" spelling="exhaustive" id="2002945207689"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002719602507"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001069557919"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2003509665089"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2000818674415"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2002512751646"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2001115812159"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001081961245"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2003042338684"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001597794927"/>
			<UnexposedExpr type="unsigned int" spelling="bad_transforms" id="2003399106271"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="skip_transform" id="2000077434279"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003554070534"/>
			<UnexposedExpr type="int" spelling="next" id="2001554138106"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001884595703"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001106498588"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2003931949644"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2003052614752"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2000542101537"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2003655403691"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001648520860"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2000951444406"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2000130345473"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2004064508231"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2002318406391"/>
			<UnexposedExpr type="unsigned int" spelling="first_transform" id="2003851310406"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2002589360667"/>
			<UnexposedExpr type="int" spelling="active" id="2001068415643"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2001982693733"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2002968023901"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002743064995"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo" id="2003521750974"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2001669402057"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2002448096068"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002669448475"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2003345517807"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo" id="2003504847175"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo_list" id="2001007752267"/>
			<UnexposedExpr type="unsigned int" spelling="rw_transforms" id="2002180717560"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo_list" id="2003334086563"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2002757399701"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2001510800810"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000952683046"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000283575042"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001696052047"/>
			<StringLiteral type="char [18]" spelling="&quot;active transforms&quot;" id="2003704534302"/>
			<StringLiteral type="char [22]" spelling="&quot;reversible transforms&quot;" id="2001113199971"/>
			<StringLiteral type="char [33]" spelling="&quot;(next &amp; read_transforms) == next&quot;" id="2001326834659"/>
			<StringLiteral type="char [77]" spelling="&quot;/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c&quot;" id="2001525326559"/>
			<StringLiteral type="const char [51]" spelling="&quot;void test_one_file(struct display *, const char *)&quot;" id="2003098509937"/>
			<StringLiteral type="char [46]" spelling="&quot;%s[0x%x]: PROBLEM: 0x%x[0x%x] ANTIDOTE: 0x%x\n&quot;" id="2004073046345"/>
			<StringLiteral type="char [27]" spelling="&quot;%s: no %sbad combos found\n&quot;" id="2004149409301"/>
			<StringLiteral type="char [12]" spelling="&quot;additional &quot;" id="2000122174085"/>
			<StringLiteral type="char [1]" spelling="&quot;&quot;" id="2002285809823"/>
			<LabelStmt type="" spelling="combo" id="2000641184876"/>
			<LabelStmt type="" spelling="combo" id="2000641184876"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002280728121"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002375014327"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2000300503032"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2002975712419"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2003150854513"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003695329672"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002233123159"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000255085401"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002655548118"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2002072610226"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002428084172"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002703775750"/>
			<DeclRefExpr type="void (struct display *, png_infop, int)" spelling="write_png" id="2002590519398"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001916401011"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002892496048"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002536725545"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002879180010"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001327310131"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003486135545"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2000097471442"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003829500366"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002571108954"/>
			<DeclRefExpr type="int (int)" spelling="is_combo" id="2001459513278"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002253016555"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2000936018325"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2004009940322"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2000236459247"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000905308338"/>
			<DeclRefExpr type="unsigned int" spelling="bad_transforms" id="2001594301982"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002866734275"/>
			<DeclRefExpr type="int" spelling="exhaustive" id="2000418970764"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002843027154"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001420613180"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2001397135632"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001212673154"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001404434885"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003544063781"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002171963661"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000026297858"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2001358230742"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001085331477"/>
			<DeclRefExpr type="unsigned int" spelling="bad_transforms" id="2001618051294"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="skip_transform" id="2001603861220"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002214150021"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2004012309429"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001008300229"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003891672298"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2002277332400"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000950671314"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2001927682602"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2004229883939"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2001717067848"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2003739194321"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000936296154"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2000215429016"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2003644980267"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2003892300615"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2003052201803"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2000822893606"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2004137183063"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001215375553"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2003211470418"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2001229907582"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001681160176"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2003884432954"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2001999164216"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2002123149557"/>
			<DeclRefExpr type="unsigned int" spelling="rw_transforms" id="2002540120722"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2000800995124"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2004103557910"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002712335848"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002787362653"/>
			<LabelRef type="" spelling="combo" id="2003258472767"/>
			<LabelRef type="" spelling="combo" id="2003258472767"/>
			<VarDecl type="unsigned int" spelling="active" id="2002008253628"/>
			<VarDecl type="int" spelling="exhaustive" id="2003873987419"/>
			<VarDecl type="unsigned int" spelling="current" id="2000757260710"/>
			<VarDecl type="unsigned int" spelling="bad_transforms" id="2002808240320"/>
			<VarDecl type="unsigned int" spelling="bad_combo" id="2001435446903"/>
			<VarDecl type="unsigned int" spelling="bad_combo_list" id="2002046618896"/>
			<VarDecl type="unsigned int" spelling="next" id="2001058379782"/>
			<CallExpr type="int" spelling="first_transform" id="2003436734142"/>
			<CallExpr type="void" spelling="read_png" id="2000840447875"/>
			<CallExpr type="void" spelling="write_png" id="2002713316938"/>
			<CallExpr type="void" spelling="read_png" id="2001784468683"/>
			<CallExpr type="int" spelling="compare_read" id="2002815825978"/>
			<CallExpr type="int" spelling="is_combo" id="2000224165892"/>
			<CallExpr type="int" spelling="skip_transform" id="2001226973088"/>
			<CallExpr type="void" spelling="__assert_fail" id="2002039658800"/>
			<CallExpr type="int" spelling="first_transform" id="2001625388250"/>
			<CallExpr type="int" spelling="printf" id="2000961888315"/>
			<CallExpr type="int" spelling="printf" id="2003112949711"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="third" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Use unsigned int here because the code below to increment through all
       * the possibilities exhaustively has to use a compare and that must be
       * unsigned, because some transforms are negative on a 16-bit system." comment_scope_start="1453" comment_scope_end="1460">
		<SYMBOLS>
			<MemberRefExpr type="int" spelling="active_transforms" id="2003209589273"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001367912020"/>
			<UnexposedExpr type="unsigned int" spelling="active_transforms" id="2003301815359"/>
			<UnexposedExpr type="int" spelling="active_transforms" id="2003042426656"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001751947855"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000184687157"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003557699908"/>
			<UnexposedExpr type="unsigned int" spelling="first_transform" id="2001015873932"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2003654916907"/>
			<UnexposedExpr type="int" spelling="active" id="2000514668455"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2000064891343"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002280728121"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002375014327"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2000300503032"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2002975712419"/>
			<VarDecl type="unsigned int" spelling="active" id="2002008253628"/>
			<VarDecl type="int" spelling="exhaustive" id="2003873987419"/>
			<VarDecl type="unsigned int" spelling="current" id="2000757260710"/>
			<VarDecl type="unsigned int" spelling="bad_transforms" id="2002808240320"/>
			<CallExpr type="int" spelling="first_transform" id="2003436734142"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="increment" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="negative" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="bitwise AND of failing transforms" comment_scope_start="1461" comment_scope_end="1461">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="bad_combo" id="2001435446903"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="bitwise OR of failures" comment_scope_start="1462" comment_scope_end="1462">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="bad_combo_list" id="2002046618896"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="If this involved any irreversible transformations then if we write
          * it out with just the reversible transformations and read it in again
          * with the same transforms we should get the same thing.  At present
          * this isn't done - it just seems like a waste of time and it would
          * require two sets of read png_struct/png_info.
          *
          * If there were no irreversible transformations then if we write it
          * out and read it back in again (without the reversible transforms)
          * we should get back to the place where we started." comment_scope_start="1468" comment_scope_end="1480">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002160297119"/>
			<UnexposedExpr type="unsigned int" spelling="write_transforms" id="2004060781666"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003733065554"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002655548118"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2002072610226"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002428084172"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="All transforms reversible: write the PNG with the transformations
             * reversed, then read it back in with no transformations.  The
             * result should be the same as the original apart from the loss of
             * low order bits because of the SHIFT/sBIT transform." comment_scope_start="1481" comment_scope_end="1488">
		<SYMBOLS>
			<MemberRefExpr type="const char *" spelling="operation" id="2002801981436"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2002100783060"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003256496985"/>
			<UnexposedExpr type="void (*)(struct display *, png_infop, int)" spelling="write_png" id="2001985099471"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001827916692"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002941496970"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004199447589"/>
			<UnexposedExpr type="int" spelling="current" id="2003027301720"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002214534482"/>
			<StringLiteral type="char [22]" spelling="&quot;reversible transforms&quot;" id="2001113199971"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002703775750"/>
			<DeclRefExpr type="void (struct display *, png_infop, int)" spelling="write_png" id="2002590519398"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001916401011"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002892496048"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002536725545"/>
			<CallExpr type="void" spelling="write_png" id="2002713316938"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="And if this is read back in, because all the transformations were
             * reversible, the result should be the same." comment_scope_start="1489" comment_scope_end="1492">
		<SYMBOLS>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2001973110528"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002505625587"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002594545802"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003510843747"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002879180010"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001327310131"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003486135545"/>
			<CallExpr type="void" spelling="read_png" id="2001784468683"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="for the SHIFT/sBIT transform" comment_scope_start="1493" comment_scope_end="1493">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2001210215303"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000629696494"/>
			<UnexposedExpr type="int" spelling="current" id="2002682445239"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003459176252"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2000097471442"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003829500366"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002571108954"/>
			<CallExpr type="int" spelling="compare_read" id="2002815825978"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="This set of transforms failed.  If a single bit is set - if
                * there is just one transform - don't include this in further
                * 'exhaustive' tests.  Notice that each transform is tested on
                * its own before testing combos in the exhaustive case." comment_scope_start="1495" comment_scope_end="1504">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(int)" spelling="is_combo" id="2002421117791"/>
			<UnexposedExpr type="int" spelling="current" id="2000595730950"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2001909088739"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2004258782992"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002318227774"/>
			<DeclRefExpr type="int (int)" spelling="is_combo" id="2001459513278"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002253016555"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2000936018325"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2004009940322"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2000236459247"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000905308338"/>
			<CallExpr type="int" spelling="is_combo" id="2000224165892"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="include" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Now move to the next transform" comment_scope_start="1512" comment_scope_end="1533">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="exhaustive" id="2002945207689"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002719602507"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001069557919"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2003509665089"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2000818674415"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2002512751646"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2001115812159"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001081961245"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2003042338684"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001597794927"/>
			<UnexposedExpr type="unsigned int" spelling="bad_transforms" id="2003399106271"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="skip_transform" id="2000077434279"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003554070534"/>
			<UnexposedExpr type="int" spelling="next" id="2001554138106"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001884595703"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001106498588"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2003931949644"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2003052614752"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2000542101537"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2003655403691"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001648520860"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2000951444406"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2000130345473"/>
			<StringLiteral type="char [33]" spelling="&quot;(next &amp; read_transforms) == next&quot;" id="2001326834659"/>
			<StringLiteral type="char [77]" spelling="&quot;/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c&quot;" id="2001525326559"/>
			<StringLiteral type="const char [51]" spelling="&quot;void test_one_file(struct display *, const char *)&quot;" id="2003098509937"/>
			<DeclRefExpr type="int" spelling="exhaustive" id="2000418970764"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002843027154"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001420613180"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2001397135632"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001212673154"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001404434885"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003544063781"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002171963661"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000026297858"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2001358230742"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001085331477"/>
			<DeclRefExpr type="unsigned int" spelling="bad_transforms" id="2001618051294"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="skip_transform" id="2001603861220"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002214150021"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2004012309429"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001008300229"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003891672298"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2002277332400"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000950671314"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2001927682602"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2004229883939"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2001717067848"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2003739194321"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000936296154"/>
			<LabelRef type="" spelling="combo" id="2003258472767"/>
			<VarDecl type="unsigned int" spelling="next" id="2001058379782"/>
			<CallExpr type="int" spelling="skip_transform" id="2001226973088"/>
			<CallExpr type="void" spelling="__assert_fail" id="2002039658800"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="all combinations" comment_scope_start="1513" comment_scope_end="1513">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="exhaustive" id="2002945207689"/>
			<DeclRefExpr type="int" spelling="exhaustive" id="2000418970764"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Everything tested" comment_scope_start="1519" comment_scope_end="1519">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001069557919"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2003509665089"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001420613180"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2001397135632"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="skip known bad combos if the relevant option is set; skip
                * combos involving known bad single transforms in all cases." comment_scope_start="1523" comment_scope_end="1525"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="skip cases that do nothing" comment_scope_start="1527" comment_scope_end="1527">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001081961245"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2003042338684"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000026297858"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2001358230742"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="one at a time" comment_scope_start="1535" comment_scope_end="1535"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="bad_combos identifies the combos that occur in all failing cases;
          * bad_combo_list identifies transforms that do not prevent the
          * failure." comment_scope_start="1549" comment_scope_end="1561">
		<SYMBOLS>
			<MemberRefExpr type="const char *" spelling="filename" id="2004065259725"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2003012637096"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002005650157"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo" id="2003521750974"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2001669402057"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2002448096068"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002669448475"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2003345517807"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo" id="2003504847175"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo_list" id="2001007752267"/>
			<UnexposedExpr type="unsigned int" spelling="rw_transforms" id="2002180717560"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo_list" id="2003334086563"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2002757399701"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2001510800810"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000952683046"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000283575042"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001696052047"/>
			<StringLiteral type="char [46]" spelling="&quot;%s[0x%x]: PROBLEM: 0x%x[0x%x] ANTIDOTE: 0x%x\n&quot;" id="2004073046345"/>
			<StringLiteral type="char [27]" spelling="&quot;%s: no %sbad combos found\n&quot;" id="2004149409301"/>
			<StringLiteral type="char [12]" spelling="&quot;additional &quot;" id="2000122174085"/>
			<StringLiteral type="char [1]" spelling="&quot;&quot;" id="2002285809823"/>
			<LabelStmt type="" spelling="combo" id="2000641184876"/>
			<LabelStmt type="" spelling="combo" id="2000641184876"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2003211470418"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2001229907582"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001681160176"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2003884432954"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2001999164216"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2002123149557"/>
			<DeclRefExpr type="unsigned int" spelling="rw_transforms" id="2002540120722"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2000800995124"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2004103557910"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002712335848"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002787362653"/>
			<CallExpr type="int" spelling="printf" id="2000961888315"/>
			<CallExpr type="int" spelling="printf" id="2003112949711"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="failure" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Exists solely to isolate the setjmp clobbers" comment_scope_start="1567" comment_scope_end="1581">
		<SYMBOLS>
			<MemberRefExpr type="jmp_buf" spelling="error_return" id="2000723792468"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2002188932612"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="error_return" id="2002229457148"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000637193530"/>
			<UnexposedExpr type="int" spelling="ret" id="2002581666650"/>
			<UnexposedExpr type="void (*)(struct display *, const char *)" spelling="test_one_file" id="2004209187303"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003010244809"/>
			<UnexposedExpr type="const char *" spelling="file" id="2003882625745"/>
			<UnexposedExpr type="int" spelling="ret" id="2001441940227"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000023373229"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004015487129"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2000986118793"/>
			<UnexposedExpr type="int" spelling="ret" id="2000591669170"/>
			<UnexposedExpr type="int" spelling="ret" id="2001291677275"/>
			<StringLiteral type="char [26]" spelling="&quot;unexpected return code %d&quot;" id="2001771322776"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2000960166237"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003923260711"/>
			<DeclRefExpr type="int" spelling="ret" id="2001260634991"/>
			<DeclRefExpr type="void (struct display *, const char *)" spelling="test_one_file" id="2001479080321"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002702129385"/>
			<DeclRefExpr type="const char *" spelling="file" id="2000396958397"/>
			<DeclRefExpr type="int" spelling="ret" id="2002746845464"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2002367933554"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000334965174"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002291603374"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2003256197263"/>
			<DeclRefExpr type="int" spelling="ret" id="2003707144644"/>
			<DeclRefExpr type="int" spelling="ret" id="2004097528633"/>
			<VarDecl type="int" spelling="ret" id="2001843081124"/>
			<FunctionDecl type="int (struct display *, const char *)" spelling="do_test" id="2000793775713"/>
			<CallExpr type="int" spelling="_setjmp" id="2001647141366"/>
			<CallExpr type="void" spelling="test_one_file" id="2000559513280"/>
			<CallExpr type="void" spelling="display_log" id="2001256695203"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="shouldn't longjmp on warnings" comment_scope_start="1577" comment_scope_end="1577">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="ret" id="2001441940227"/>
			<DeclRefExpr type="int" spelling="ret" id="2002746845464"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2002367933554"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="For each file on the command line test it with a range of transforms" comment_scope_start="1586" comment_scope_end="1622">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002988128092"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002313064906"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000732012671"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003920673138"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002661889860"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000650003210"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000322327664"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003632544786"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002583021011"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003090986828"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003848912130"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002143501048"/>
			<UnexposedExpr type="void (*)(void)" spelling="validate_T" id="2003722812744"/>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_init" id="2002771953923"/>
			<UnexposedExpr type="int" spelling="option_end" id="2003759398718"/>
			<UnexposedExpr type="int" spelling="argc" id="2002444060613"/>
			<UnexposedExpr type="char **" spelling="argv" id="2001107894503"/>
			<UnexposedExpr type="int" spelling="option_end" id="2000192305826"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2000235846756"/>
			<UnexposedExpr type="const char *" spelling="name" id="2001278493693"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000328346277"/>
			<UnexposedExpr type="unsigned int" spelling="VERBOSE" id="2001193657852"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2000569922614"/>
			<UnexposedExpr type="const char *" spelling="name" id="2001718760353"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2003188249943"/>
			<UnexposedExpr type="unsigned int" spelling="WARNINGS" id="2000828685903"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2001200346602"/>
			<UnexposedExpr type="const char *" spelling="name" id="2001878796639"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2004121862201"/>
			<UnexposedExpr type="unsigned int" spelling="ERRORS" id="2002089305665"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2001660713390"/>
			<UnexposedExpr type="const char *" spelling="name" id="2001505510517"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001265397215"/>
			<UnexposedExpr type="unsigned int" spelling="QUIET" id="2001486833945"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2000689541479"/>
			<UnexposedExpr type="const char *" spelling="name" id="2002383136262"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2002810209792"/>
			<UnexposedExpr type="const char *" spelling="name" id="2001675961841"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2001215084945"/>
			<UnexposedExpr type="const char *" spelling="name" id="2002535014957"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2003555747708"/>
			<UnexposedExpr type="const char *" spelling="name" id="2001241226837"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2000648337472"/>
			<UnexposedExpr type="const char *" spelling="name" id="2001915197468"/>
			<StringLiteral type="char [10]" spelling="&quot;--verbose&quot;" id="2000142506975"/>
			<StringLiteral type="char [11]" spelling="&quot;--warnings&quot;" id="2002859456952"/>
			<StringLiteral type="char [9]" spelling="&quot;--errors&quot;" id="2000121648601"/>
			<StringLiteral type="char [8]" spelling="&quot;--quiet&quot;" id="2004231830402"/>
			<StringLiteral type="char [13]" spelling="&quot;--exhaustive&quot;" id="2002600133906"/>
			<StringLiteral type="char [7]" spelling="&quot;--fast&quot;" id="2003172482881"/>
			<StringLiteral type="char [9]" spelling="&quot;--strict&quot;" id="2002596043104"/>
			<StringLiteral type="char [10]" spelling="&quot;--relaxed&quot;" id="2003237105860"/>
			<StringLiteral type="char [6]" spelling="&quot;--log&quot;" id="2001615970671"/>
			<DeclRefExpr type="void (void)" spelling="validate_T" id="2001326409139"/>
			<DeclRefExpr type="void (struct display *)" spelling="display_init" id="2002171571445"/>
			<DeclRefExpr type="struct display" spelling="d" id="2003680148610"/>
			<DeclRefExpr type="int" spelling="option_end" id="2000008188459"/>
			<DeclRefExpr type="int" spelling="option_end" id="2003845391490"/>
			<DeclRefExpr type="int" spelling="argc" id="2000383748260"/>
			<DeclRefExpr type="int" spelling="option_end" id="2003363201116"/>
			<DeclRefExpr type="char **" spelling="argv" id="2004250292164"/>
			<DeclRefExpr type="int" spelling="option_end" id="2000704189883"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2000212065937"/>
			<DeclRefExpr type="const char *" spelling="name" id="2003332068048"/>
			<DeclRefExpr type="struct display" spelling="d" id="2002235622226"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001182473935"/>
			<DeclRefExpr type="int" spelling="VERBOSE" id="2003991190766"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2000299272763"/>
			<DeclRefExpr type="const char *" spelling="name" id="2000905195615"/>
			<DeclRefExpr type="struct display" spelling="d" id="2004290556215"/>
			<DeclRefExpr type="struct display" spelling="d" id="2004181216084"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2002884135517"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2003307030642"/>
			<DeclRefExpr type="const char *" spelling="name" id="2000217731826"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000982374946"/>
			<DeclRefExpr type="struct display" spelling="d" id="2002587146292"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2003644729970"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2001204325969"/>
			<DeclRefExpr type="const char *" spelling="name" id="2002384210778"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001225678498"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000690904605"/>
			<DeclRefExpr type="int" spelling="QUIET" id="2000114332942"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2001011961531"/>
			<DeclRefExpr type="const char *" spelling="name" id="2003475084722"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001092822202"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2000351137907"/>
			<DeclRefExpr type="const char *" spelling="name" id="2001946756218"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000038948540"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2002199051677"/>
			<DeclRefExpr type="const char *" spelling="name" id="2001439334472"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000551982640"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2002428288292"/>
			<DeclRefExpr type="const char *" spelling="name" id="2003338565348"/>
			<DeclRefExpr type="struct display" spelling="d" id="2003936895753"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2000548708809"/>
			<DeclRefExpr type="const char *" spelling="name" id="2000362333925"/>
			<VarDecl type="int" spelling="option_end" id="2001805272550"/>
			<VarDecl type="int" spelling="ilog" id="2001070854668"/>
			<VarDecl type="struct display" spelling="d" id="2000969467074"/>
			<VarDecl type="const char *" spelling="name" id="2004203816619"/>
			<CallExpr type="void" spelling="validate_T" id="2003001796479"/>
			<CallExpr type="void" spelling="display_init" id="2002078449491"/>
			<CallExpr type="int" spelling="strcmp" id="2003979265399"/>
			<CallExpr type="int" spelling="strcmp" id="2002782042062"/>
			<CallExpr type="int" spelling="strcmp" id="2000595792801"/>
			<CallExpr type="int" spelling="strcmp" id="2004184844854"/>
			<CallExpr type="int" spelling="strcmp" id="2000215312001"/>
			<CallExpr type="int" spelling="strcmp" id="2000905329070"/>
			<CallExpr type="int" spelling="strcmp" id="2000418936626"/>
			<CallExpr type="int" spelling="strcmp" id="2003415499823"/>
			<CallExpr type="int" spelling="strcmp" id="2002795647936"/>
			<TypeRef type="struct display" spelling="struct display" id="2001291171455"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="prevent display" comment_scope_start="1623" comment_scope_end="1623">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="option_end" id="2000917499062"/>
			<DeclRefExpr type="int" spelling="ilog" id="2000607733519"/>
			<DeclRefExpr type="int" spelling="option_end" id="2001200705674"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Not an option" comment_scope_start="1667" comment_scope_end="1667"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="abort on user or internal error" comment_scope_start="1679" comment_scope_end="1679">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="ret" id="2004252635747"/>
			<DeclRefExpr type="int" spelling="ret" id="2000587215515"/>
			<DeclRefExpr type="int" spelling="QUIET" id="2002025232863"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="abort" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Here on any return, including failures, except user/internal issues" comment_scope_start="1683" comment_scope_end="1704">
		<SYMBOLS>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002000111190"/>
			<MemberRefExpr type="png_uint_32" spelling="results" id="2002515660649"/>
			<MemberRefExpr type="png_uint_32" spelling="results" id="2004075412626"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001532352901"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2000799931293"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001314835929"/>
			<UnexposedExpr type="int" spelling="pass" id="2003523964685"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001405918637"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2004252701437"/>
			<UnexposedExpr type="int" spelling="pass" id="2000077654241"/>
			<UnexposedExpr type="int" spelling="j" id="2001619586542"/>
			<UnexposedExpr type="int" spelling="option_end" id="2003358049458"/>
			<UnexposedExpr type="int" spelling="j" id="2003662025065"/>
			<UnexposedExpr type="int" spelling="ilog" id="2001419135770"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2000954910764"/>
			<UnexposedExpr type="char **" spelling="argv" id="2001855381736"/>
			<UnexposedExpr type="int" spelling="j" id="2003370579254"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2002135539211"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2001002281237"/>
			<StringLiteral type="char [14]" spelling="&quot;%s: pngimage &quot;" id="2002864306259"/>
			<StringLiteral type="char [5]" spelling="&quot;PASS&quot;" id="2004261216744"/>
			<StringLiteral type="char [5]" spelling="&quot;FAIL&quot;" id="2001398943601"/>
			<StringLiteral type="char [4]" spelling="&quot;%s &quot;" id="2001649968042"/>
			<StringLiteral type="char [4]" spelling="&quot;%s\n&quot;" id="2001262071040"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001610792414"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000031484600"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2000120647708"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000315623999"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2000788319035"/>
			<DeclRefExpr type="int" spelling="pass" id="2003257718279"/>
			<DeclRefExpr type="int" spelling="errors" id="2002838725042"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001050643883"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2001035790364"/>
			<DeclRefExpr type="int" spelling="pass" id="2003970798222"/>
			<DeclRefExpr type="int" spelling="j" id="2001397363008"/>
			<DeclRefExpr type="int" spelling="j" id="2000131942119"/>
			<DeclRefExpr type="int" spelling="option_end" id="2003779031157"/>
			<DeclRefExpr type="int" spelling="j" id="2002214038912"/>
			<DeclRefExpr type="int" spelling="j" id="2001731356416"/>
			<DeclRefExpr type="int" spelling="ilog" id="2002543509615"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2003777439610"/>
			<DeclRefExpr type="char **" spelling="argv" id="2002023190559"/>
			<DeclRefExpr type="int" spelling="j" id="2001773319155"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2002900097135"/>
			<DeclRefExpr type="struct display" spelling="d" id="2002836087262"/>
			<VarDecl type="int" spelling="pass" id="2001001330372"/>
			<VarDecl type="int" spelling="j" id="2003257672132"/>
			<CallExpr type="int" spelling="printf" id="2003631075627"/>
			<CallExpr type="int" spelling="printf" id="2003784189219"/>
			<CallExpr type="int" spelling="printf" id="2002220276872"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="Release allocated memory" comment_scope_start="1709" comment_scope_end="1713">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_destroy" id="2000259086568"/>
			<UnexposedExpr type="int" spelling="errors" id="2002873659164"/>
			<DeclRefExpr type="void (struct display *)" spelling="display_destroy" id="2001738131136"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001995361585"/>
			<DeclRefExpr type="int" spelling="errors" id="2000359389787"/>
			<CallExpr type="void" spelling="display_destroy" id="2001635965310"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="allocated" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKTRepo/projects/libpng/contrib/libtests/pngimage.c" comment_text="!READ_PNG" comment_scope_start="1715" comment_scope_end="1715"/>
</COMMENTS>
